{"version":3,"file":"static/js/8251.89dea0e3.chunk.js","mappings":"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","sources":["pages/Employer/ChatBot/Config.js","pages/Employer/ChatBot/ActionProvider.js","pages/Employer/ChatBot/MessageParser.js","pages/Employer/ChatBot/ChatbotCompo.js","pages/Employer/ChatBot/Chatarea.js","webpack://frontend/./src/pages/Employer/ChatBot/Chatbot.module.css?ccd3"],"sourcesContent":["import {\r\n  createChatBotMessage,\r\n} from 'react-chatbot-kit';\r\n\r\nconst botName = 'HR CONNECT BOT';\r\n\r\nconst name = localStorage.getItem(\"name\")\r\n\r\nconst config = {\r\n  botName: botName,\r\n  lang: 'no',\r\n  customStyles: {\r\n    botMessageBox: {\r\n      backgroundColor: '#376B7E',\r\n    },\r\n    chatButton: {\r\n      backgroundColor: '#5ccc9d',\r\n    },\r\n  },\r\n  initialMessages: [\r\n    createChatBotMessage(\r\n      `Hi ${name}, Iâ€™m here to assist you.`\r\n    ),\r\n  ],\r\n  state: {\r\n    gist: '',\r\n    infoBox: '',\r\n  },\r\n  customComponents: {},\r\n};\r\n\r\nexport default config;","import React from \"react\";\r\n\r\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\r\n  const handleHello = () => {\r\n    const botMessage = createChatBotMessage(\"Hello. Nice to meet you.\");\r\n    setState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, botMessage],\r\n    }));\r\n  };\r\n\r\n  const handleReject = ()=>{\r\n    const botMessage = createChatBotMessage(\"please ask the question related to job, or you might have typo in your message\")\r\n    setState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, botMessage],\r\n    }));\r\n  }\r\n\r\n  const handlePostInfo = () => {\r\n    const steps = [\r\n      \"step 1: Go to create post\",\r\n      \"step 2: Upload your post image and fill the required details.\",\r\n      \"step 3: Pre-assessment is optional, If you want you can add questions also.\",\r\n      \"step 4: Last but not least click on save and preview to preview all filled details.\",\r\n      \"step 5: Click on post.\",\r\n      \"step 6: Check the dashboard for your post.\"\r\n    ];\r\n\r\n    // Iterate through each step and send it as a separate message\r\n    steps.forEach((step, index) => {\r\n      // Delay sending each step by a certain interval (e.g., 1000ms * index)\r\n      setTimeout(() => {\r\n        const botMessage = createChatBotMessage(step);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n      }, 1000 * index); // Delay each step by 1 second\r\n    });\r\n  };\r\n\r\n  const handleAnalytics = () => {\r\n    const steps = [\r\n        \"The analytics section will show your report of daily sent email in the form of bar chart.\",\r\n        \"It will also show you to which gender you have sent email which will be divided into percentage shown by pie chart.\"\r\n    ];\r\n\r\n    // Iterate through each step and send it as a separate message\r\n    steps.forEach((step, index) => {\r\n      // Delay sending each step by a certain interval (e.g., 1000ms * index)\r\n      setTimeout(() => {\r\n        const botMessage = createChatBotMessage(step);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n      }, 1000 * index); // Delay each step by 1 second\r\n    });\r\n  };\r\n\r\n  const handleScheduleInterview = () => {\r\n    const steps = [\r\n      \"step 1: On the left sidebar click on interview scheduled tab.\",\r\n      \"step 2: Then click on schedule interview.\",\r\n      \"step 3: All details of the candidate will be shown.\",\r\n      \"step 4: Fill the relevant part of form.\",\r\n      \"step 5: At last schedule the candidate interview.\"\r\n    ];\r\n\r\n    // Iterate through each step and send it as a separate message\r\n    steps.forEach((step, index) => {\r\n      // Delay sending each step by a certain interval (e.g., 1000ms * index)\r\n      setTimeout(() => {\r\n        const botMessage = createChatBotMessage(step);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n      }, 1000 * index); // Delay each step by 1 second\r\n    });\r\n  };\r\n\r\n  const handleDeletePost = () => {\r\n    const steps = [\r\n      \"Go to dashboard\",\r\n      \"step 1: scroll down to latest post section.\",\r\n      \"step 2: In latest post at top right you will see the delete icon.\",\r\n      \"step 3: click on it and the post will be deleted.\"\r\n    ];\r\n\r\n    // Iterate through each step and send it as a separate message\r\n    steps.forEach((step, index) => {\r\n      // Delay sending each step by a certain interval (e.g., 1000ms * index)\r\n      setTimeout(() => {\r\n        const botMessage = createChatBotMessage(step);\r\n        setState((prev) => ({\r\n          ...prev,\r\n          messages: [...prev.messages, botMessage],\r\n        }));\r\n      }, 1000 * index); // Delay each step by 1 second\r\n    });\r\n  };\r\n\r\n\r\n\r\n  // Put the handleHello function in the actions object to pass to the MessageParser\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n          actions: {\r\n            handleHello,\r\n            handleReject,\r\n            handlePostInfo,\r\n            handleAnalytics,\r\n            handleScheduleInterview,\r\n            handleDeletePost\r\n          },\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionProvider;\r\n","import React from 'react';\r\n\r\nconst MessageParser = ({ children, actions }) => {\r\n  const parse = (message) => {\r\n    const lowerCaseMessage = message.toLowerCase(); \r\n  \r\n    if (lowerCaseMessage.includes('hello') || lowerCaseMessage.includes('hi')) {\r\n      actions.handleHello();\r\n    }\r\n  \r\n    else if (lowerCaseMessage.includes('create post')) {\r\n      actions.handlePostInfo();\r\n    }\r\n  \r\n    else if (lowerCaseMessage.includes('analytics')) {\r\n      actions.handleAnalytics();\r\n    }\r\n  \r\n    else if (lowerCaseMessage.includes('schedule interview')) {\r\n      actions.handleScheduleInterview();\r\n    }\r\n  \r\n    else if (lowerCaseMessage.includes('delete post')) {\r\n      actions.handleDeletePost();\r\n    } else {\r\n      actions.handleReject();\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n          parse: parse,\r\n          actions,\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageParser;","import React  from 'react';\r\nimport Chatbot from 'react-chatbot-kit';\r\nimport config from './Config.js';\r\nimport actionProvider from './ActionProvider.js';\r\nimport messageParser from './MessageParser.js';\r\nimport './ChatBot.css'\r\n\r\nfunction ChatbotCompo() {\r\n  return (\r\n    <div className='App'>\r\n        <Chatbot\r\n          config={config}\r\n          actionProvider={actionProvider}\r\n          messageParser={messageParser}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatbotCompo;","import React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ChatBotStyle from \"./Chatbot.module.css\";\r\n\r\nimport icon3 from \"../../../Assets/icon3.png\";\r\nimport icon4 from \"../../../Assets/icon4.png\";\r\nimport { GoDotFill } from \"react-icons/go\";\r\nimport ChatbotCompo from \"./ChatbotCompo\";\r\n\r\nexport default function Chatarea() {\r\n\r\n  useEffect(() => {\r\n    const style = document.createElement(\"style\");\r\n    style.innerHTML = `\r\n      .JobSeeker_RightSideContainer__topHeaderContainer{\r\n        display: none !important;\r\n      }\r\n      .JobSeeker___OutletContainer{\r\n        height: 100vh;\r\n      }\r\n      \r\n    `;\r\n    document.head.appendChild(style);\r\n\r\n    return () => {\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n\r\n\r\n  return (\r\n<div style={{margin:'-24px -24px 0px -24px'}}>\r\n<div className={ChatBotStyle.ai_full}>\r\n      <Helmet>\r\n      <style>{`\r\n          .JobSeeker_RightSideContainer__topHeaderContainer {\r\n            display: none !important;\r\n          }\r\n\r\n          .JobSeeker_LayoutContainer__RightSideContainer {\r\n            height: auto;\r\n          }\r\n        `}</style>\r\n      </Helmet>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12} className={ChatBotStyle.header_style_ai}>\r\n            <div className={ChatBotStyle.ai_search_bar}>\r\n              <div className={ChatBotStyle.ai_search_icons}>\r\n                <img\r\n                  src={icon3}\r\n                  alt={\"icon3\"}\r\n                  className={ChatBotStyle.chatbot_image_gender}\r\n                />\r\n                <div className={ChatBotStyle.ai_online}>\r\n                  <GoDotFill className={ChatBotStyle.ai_online_green} />\r\n                  <span>Online</span>\r\n                </div>\r\n              </div>\r\n              <img\r\n                src={icon4}\r\n                alt={\"icon4\"}\r\n                className={ChatBotStyle.chatbot_image_sound}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <div>\r\n      <ChatbotCompo/>\r\n      </div>\r\n    </div>\r\n</div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatbot_title\":\"Chatbot_chatbot_title__5EPyW\",\"chatbot_full_content\":\"Chatbot_chatbot_full_content__EdSXs\",\"chatbot_content\":\"Chatbot_chatbot_content__KXZEF\",\"chatbot_image\":\"Chatbot_chatbot_image__9aKgq\",\"chatbot_content_image\":\"Chatbot_chatbot_content_image__pPI77\",\"chatbot_bg\":\"Chatbot_chatbot_bg__YYbGS\",\"chatbot_full_image\":\"Chatbot_chatbot_full_image__d1BaX\",\"chatbot_button\":\"Chatbot_chatbot_button__Qa3ty\",\"chatbot_link\":\"Chatbot_chatbot_link__-zHdN\",\"chatbot_image_gender\":\"Chatbot_chatbot_image_gender__RAx3v\",\"ai_search_bar\":\"Chatbot_ai_search_bar__wfCOA\",\"ai_search_icons\":\"Chatbot_ai_search_icons__uCMj3\",\"chatbot_image_sound\":\"Chatbot_chatbot_image_sound__qhlr9\",\"ai_online_green\":\"Chatbot_ai_online_green__BbIZY\",\"ai_online\":\"Chatbot_ai_online__kgbDC\",\"ai_inter_side\":\"Chatbot_ai_inter_side__N+sNo\",\"with_ai\":\"Chatbot_with_ai__aFTDU\",\"ai_orange\":\"Chatbot_ai_orange__zObfZ\",\"ai_summary\":\"Chatbot_ai_summary__ADu5k\",\"chatbot_image_group\":\"Chatbot_chatbot_image_group__za5xM\",\"chatbot_image_camera\":\"Chatbot_chatbot_image_camera__rspcE\",\"chatbot_shew\":\"Chatbot_chatbot_shew__Kaatq\",\"noPaddingRow\":\"Chatbot_noPaddingRow__ndzr2\",\"chatbot_gallery1\":\"Chatbot_chatbot_gallery1__3SfWP\",\"chatbot_gallery2\":\"Chatbot_chatbot_gallery2__RJkHo\",\"chatbot_gallery3\":\"Chatbot_chatbot_gallery3__nTsVk\",\"chatbot_gallery4\":\"Chatbot_chatbot_gallery4__yzV3m\",\"search_area\":\"Chatbot_search_area__X8KpF\",\"search_field_area\":\"Chatbot_search_field_area__sGfAx\",\"search_icons\":\"Chatbot_search_icons__uDT5B\",\"search_field_color\":\"Chatbot_search_field_color__y96AT\",\"search_field\":\"Chatbot_search_field__vbeci\",\"search_answer\":\"Chatbot_search_answer__z2KR5\",\"search_answer_two\":\"Chatbot_search_answer_two__n94KJ\",\"search_answer_three\":\"Chatbot_search_answer_three__xxagy\",\"chatbot_gallery1_inside\":\"Chatbot_chatbot_gallery1_inside__hJieZ\",\"search_exp\":\"Chatbot_search_exp__GlNFm\",\"search_exp_red\":\"Chatbot_search_exp_red__cErwS\",\"search_exp_green\":\"Chatbot_search_exp_green__lrt6U\",\"search_one\":\"Chatbot_search_one__+eX0s\",\"search_answer_total\":\"Chatbot_search_answer_total__vRYPH\",\"header_style_ai\":\"Chatbot_header_style_ai__yjyr4\",\"chatbot_body\":\"Chatbot_chatbot_body__+aCnl\"};"],"names":["name","localStorage","getItem","botName","lang","customStyles","botMessageBox","backgroundColor","chatButton","initialMessages","createChatBotMessage","concat","state","gist","infoBox","customComponents","_ref","setState","children","handleHello","botMessage","prev","messages","handleReject","handlePostInfo","forEach","step","index","setTimeout","handleAnalytics","handleScheduleInterview","handleDeletePost","_jsx","React","map","child","actions","parse","message","lowerCaseMessage","toLowerCase","includes","className","Chatbot","config","actionProvider","messageParser","Chatarea","useEffect","style","document","createElement","innerHTML","head","appendChild","removeChild","margin","_jsxs","ChatBotStyle","ai_full","Helmet","Container","Row","Col","md","header_style_ai","ai_search_bar","ai_search_icons","src","icon3","alt","chatbot_image_gender","ai_online","GoDotFill","ai_online_green","icon4","chatbot_image_sound","ChatbotCompo"],"sourceRoot":""}