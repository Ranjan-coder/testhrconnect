{"version":3,"file":"static/js/7297.d3f5bbf7.chunk.js","mappings":"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","sources":["webpack://frontend/./src/pages/Employer/Settings/Setting.module.css?8e02","pages/Employer/Settings/Setting.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"my_setting_container\":\"Setting_my_setting_container__lOfnM\",\"my_profile_box\":\"Setting_my_profile_box__jV37J\",\"__hrImg\":\"Setting___hrImg__ePGeb\",\"__pfGreet\":\"Setting___pfGreet__BpaBS\",\"Setting_opt_container\":\"Setting_Setting_opt_container__ZUxZz\",\"setting_opt_left\":\"Setting_setting_opt_left__ePbcC\",\"setting_opt\":\"Setting_setting_opt__yIBJH\",\"setting_opt_active\":\"Setting_setting_opt_active__4x0l+\",\"setting_opt_right\":\"Setting_setting_opt_right__NOL0t\",\"__personalInfo\":\"Setting___personalInfo__svpEe\",\"__defaultText\":\"Setting___defaultText__18yZa\",\"__pfEditBtn\":\"Setting___pfEditBtn__84kAE\",\"__pfLogoutBtn\":\"Setting___pfLogoutBtn__uFpvC\",\"__pfDeleteBtn\":\"Setting___pfDeleteBtn__CugBJ\",\"__popupDelete\":\"Setting___popupDelete__8j+33\",\"__btnAgree\":\"Setting___btnAgree__crbe2\",\"__btnCancel\":\"Setting___btnCancel__cQ3va\",\"Profile_cont2\":\"Setting_Profile_cont2__k2GxY\",\"Profile_cont2_One\":\"Setting_Profile_cont2_One__RpELW\",\"Appearance\":\"Setting_Appearance__3zmid\",\"notification\":\"Setting_notification__ZT-UZ\",\"checkboxex\":\"Setting_checkboxex__Kg-Sb\",\"checkbox1\":\"Setting_checkbox1__T4zX6\",\"click\":\"Setting_click__HuICa\",\"darkModePopup\":\"Setting_darkModePopup__m5UQT\",\"popupContent\":\"Setting_popupContent__NMM45\",\"privacySettings\":\"Setting_privacySettings__z4q34\",\"supportContent\":\"Setting_supportContent__6Djh3\",\"contactDetails\":\"Setting_contactDetails__NR3kl\",\"feedbackForm\":\"Setting_feedbackForm__y0nIP\",\"supportOptions\":\"Setting_supportOptions__8hdS2\"};","import React, { useState, useEffect } from 'react';\r\nimport SettingStyle from '../Settings/Setting.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GoTrash } from 'react-icons/go';\r\nimport { FaSync } from 'react-icons/fa';\r\nimport { RiUserSettingsFill } from 'react-icons/ri';\r\nimport { TbUserExclamation } from 'react-icons/tb';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleUserLogOut } from '../../../Redux/ReduxSlice';\r\nimport toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\n\r\nfunction Setting() {\r\n  const { name, profileImage } = useSelector((state) => state.Assessment.currentUser);\r\n  const [settingtype, setsettingtype] = useState(\"\");\r\n  const { email } = useSelector((state) => state.Assessment.currentUser);\r\n  const [darkModePopup, setDarkModePopup] = useState(false);\r\n  const [darkMode, setDarkMode] = useState(() => localStorage.getItem('darkMode') || 'Device settings');\r\n  const navi = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    applyDarkMode();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [darkMode]);\r\n\r\n  const applyDarkMode = () => {\r\n    const body = document.body;\r\n    if (darkMode === 'Always on') {\r\n      body.classList.add('dark-mode');\r\n      body.classList.remove('light-mode');\r\n    } else if (darkMode === 'Always off') {\r\n      body.classList.add('light-mode');\r\n      body.classList.remove('dark-mode');\r\n    } else {\r\n      body.classList.remove('dark-mode');\r\n      body.classList.remove('light-mode');\r\n    }\r\n  };\r\n\r\n  const handleDarkModeSelection = (mode) => {\r\n    setDarkMode(mode);\r\n    localStorage.setItem('darkMode', mode);\r\n    setDarkModePopup(false);\r\n    applyDarkMode();\r\n  };\r\n\r\n  const [del, setDel] = useState(false);\r\n\r\n  const handleDeleteAccount = () => {\r\n    setDel(true);\r\n  };\r\n\r\n  const handlePopupClose = () => {\r\n    setDel(false);\r\n  };\r\n\r\n  const handleAgree = () => {\r\n    axios.delete(`http://localhost:8585/api/hr/delete-hr/${email}`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          toast.success(`${response.data.msg}`);\r\n          dispatch(handleUserLogOut());\r\n          navi('/login');\r\n\r\n        } else {\r\n          toast.error('Try Again !!!');\r\n          handlePopupClose();\r\n        }\r\n      })\r\n\r\n      .catch((err) => {\r\n        toast.error(`${err.message}`);\r\n        handlePopupClose();\r\n\r\n      });\r\n  };\r\n\r\n  // const handleDoneClick = () => {\r\n  //   // Add any necessary logic when \"Done\" is clicked inside job preference\r\n  //   // For now, simply toggle settingtype to an empty string to hide the section\r\n  //   setsettingtype('');\r\n  // };\r\n\r\n  // Function to render content based on setting type\r\n  const renderSettingContent = () => {\r\n    switch (settingtype) {\r\n      // 'Setting/Profile':\r\n      default:\r\n        return (\r\n          <div className={SettingStyle.profile_designs}>\r\n            <div className={SettingStyle.Profile_cont2}>\r\n              <div className={SettingStyle.Profile_cont2_One}>\r\n                <p><FaSync /></p>\r\n                <span>Sync</span>\r\n              </div>\r\n              <div className={SettingStyle.Profile_cont2_One} onClick={() => setsettingtype('Setting/JobPreference')}>\r\n                <p><RiUserSettingsFill /></p>\r\n                <span>Job Preference</span>\r\n              </div>\r\n              <div className={SettingStyle.Profile_cont2_One} onClick={() => navi(\"/Setting/Editprofile\")}>\r\n                <p><TbUserExclamation /></p>\r\n                <span>Personal Info</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'Setting/privacy':\r\n        return (\r\n          <div className={SettingStyle.privacySettings}>\r\n            <h3>Privacy Settings</h3>\r\n            <section>\r\n              <h4>Information We Collect</h4>\r\n              <p>We collect information to provide better services to all our users. This may include:</p>\r\n              <li>Personal information such as name and email address.</li>\r\n              <li>Usage data such as browsing history and interactions with our platform.</li>\r\n              <li>Device information such as IP address and browser type.</li>\r\n            </section>\r\n            <section>\r\n              <h4>How We Use Information</h4>\r\n              <p>We use the information we collect from all of our services to provide, maintain, protect, and improve them. This includes:</p>\r\n              <li>Customizing user experience and delivering personalized content.</li>\r\n              <li>Analyzing trends and usage patterns to enhance our services.</li>\r\n              <li>Preventing fraudulent activities and ensuring security.</li>\r\n            </section>\r\n            <section>\r\n              <h4>Information You Share</h4>\r\n              <p>Our services let you share information with others. Remember that when you share information publicly, it may be indexed by search engines.</p>\r\n            </section>\r\n            <section>\r\n              <h4>Accessing and Updating Your Personal Information</h4>\r\n              <p>Whenever you use our services, we aim to provide you with access to your personal information. You can review, edit, or delete your data through your account settings.</p>\r\n            </section>\r\n            <section>\r\n              <h4>Information We Share</h4>\r\n              <p>We do not share personal information with companies, organizations, and individuals outside of our company unless one of the following circumstances applies:</p>\r\n              <li>With your consent</li>\r\n              <li>For external processing by trusted service providers</li>\r\n              <li>For legal reasons such as complying with legal obligations or responding to legal requests</li>\r\n            </section>\r\n            <button className={SettingStyle.__pfDeleteBtn} onClick={handleDeleteAccount}> <GoTrash /> Delete Account</button>\r\n            {\r\n              del && <div className={SettingStyle.__popupDelete}>\r\n                <p>Are you sure you want to delete ??</p>\r\n                <p>\r\n                  <button className={SettingStyle.__btnAgree} onClick={handleAgree}>Agree</button>\r\n                  <button className={SettingStyle.__btnCancel} onClick={handlePopupClose}>Cancel</button>\r\n                </p>\r\n              </div>\r\n            }\r\n          </div>\r\n        );\r\n\r\n      case 'Setting/service':\r\n        return (\r\n          <div className={SettingStyle.serviceSettings}>\r\n            <h3>Service Settings</h3>\r\n            <section>\r\n              <h4>Terms of Service</h4>\r\n              <p>By using our platform, you agree to our Terms of Service. Please review them carefully to understand your rights and responsibilities.</p>\r\n              <a href=\"/terms-of-service\">Read Terms of Service</a>\r\n            </section>\r\n            <section>\r\n              <h4>Acceptable Use Policy</h4>\r\n              <p>Our Acceptable Use Policy outlines the rules and guidelines for using our platform. It covers acceptable behavior, content restrictions, and prohibited activities.</p>\r\n              <a href=\"/acceptable-use-policy\">Read Acceptable Use Policy</a>\r\n            </section>\r\n            <section>\r\n              <h4>Privacy Policy</h4>\r\n              <p>Our Privacy Policy explains how we collect, use, and protect your personal information. It also describes your rights and choices regarding your data.</p>\r\n              <a href=\"/privacy-policy\">Read Privacy Policy</a>\r\n            </section>\r\n          </div>\r\n        );\r\n\r\n      case 'Setting/appearance':\r\n        return (\r\n          <div className={`${SettingStyle.Profile_cont2}`}>\r\n            <div className={SettingStyle.Profile_cont2_One} onClick={() => setDarkModePopup(true)}>\r\n              <span>Dark Mode</span>\r\n            </div>\r\n            <div className={SettingStyle.Profile_cont2_One}>\r\n              <span>Font Size</span>\r\n            </div>\r\n            <div className={SettingStyle.Profile_cont2_One}>\r\n              <span>Any other appearance button</span>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'Setting/notification':\r\n        return (\r\n          <div className={`${SettingStyle.notification} ${SettingStyle.Profile_cont1}`}>\r\n            <div className={SettingStyle.checkboxex}>\r\n              <label htmlFor=\"check1\">Option 1</label>\r\n              <div className={SettingStyle.checkbox1}>\r\n                <input type=\"checkbox\" id=\"check1\" className={SettingStyle.click}></input>\r\n                <span>Allow Notification</span>\r\n              </div>\r\n            </div>\r\n            <div className={SettingStyle.checkboxex}>\r\n              <label htmlFor=\"check2\">Option 2</label>\r\n              <div className={SettingStyle.checkbox1}>\r\n                <input type=\"checkbox\" id=\"check2\" className={SettingStyle.click}></input>\r\n                <span>Allow Notification</span>\r\n              </div>\r\n            </div>\r\n            <div className={SettingStyle.checkboxex}>\r\n              <label htmlFor=\"check3\">Option 3</label>\r\n              <div className={SettingStyle.checkbox1}>\r\n                <input type=\"checkbox\" id=\"check3\" className={SettingStyle.click}></input>\r\n                <span>Allow Notification</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'Setting/support':\r\n        return (\r\n          <div className={SettingStyle.supportContent}>\r\n            <h3>Support</h3>\r\n            <p>If you need any assistance or have any questions, please don't hesitate to reach out to us.</p>\r\n            <div className={SettingStyle.contactDetails}>\r\n              <h4>Contact Details</h4>\r\n              <p>Email: support@example.com</p>\r\n              <p>Phone: +1-123-456-7890</p>\r\n            </div>\r\n            <div className={SettingStyle.supportOptions}>\r\n              <h4>Support Options</h4>\r\n              <li>Live Chat Support</li>\r\n              <li>Email Support</li>\r\n              <li>Phone Support</li>\r\n            </div>\r\n            <form className={SettingStyle.feedbackForm}>\r\n              <h4>Submit Feedback</h4>\r\n              <textarea placeholder=\"Enter your feedback\"></textarea>\r\n              <button type=\"submit\">Submit Feedback</button>\r\n            </form>\r\n          </div>\r\n        );\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={SettingStyle.my_setting_container}>\r\n      <div className={SettingStyle.my_profile_box}>\r\n        <img\r\n          className={SettingStyle.__hrImg}\r\n          title=\"Profile\"\r\n          src={profileImage ?? 'https://img.freepik.com/free-vector/illustration-businessman_53876-5856.jpg'}\r\n          alt=\"profile_img\"\r\n          onError={(e) => {\r\n            e.target.src = 'https://img.freepik.com/free-vector/illustration-businessman_53876-5856.jpg';\r\n            e.onError = null;\r\n          }}\r\n        />\r\n        <h4 className={SettingStyle.__pfGreet}> {name}</h4>\r\n      </div>\r\n\r\n      <div className={SettingStyle.Setting_opt_container}>\r\n        <div className={SettingStyle.setting_opt_left}>\r\n          <div className={settingtype === 'Setting/Profile' ? `${SettingStyle.setting_opt_active} ` : SettingStyle.setting_opt} onClick={() => setsettingtype('Setting/Profile')}>\r\n            <i className=\"fa-solid fa-user\" /> Profile\r\n          </div>\r\n          <div className={settingtype === 'Setting/privacy' ? SettingStyle.setting_opt_active : SettingStyle.setting_opt} onClick={() => setsettingtype('Setting/privacy')}>\r\n            <i className=\"fa-solid fa-lock\" /> Privacy & Security\r\n          </div>\r\n          <div className={settingtype === 'Setting/appearance' ? SettingStyle.setting_opt_active : SettingStyle.setting_opt} onClick={() => setsettingtype('Setting/appearance')}>\r\n            <i className=\"fa-solid fa-wand-magic-sparkles\" /> Appearance\r\n          </div>\r\n\r\n          <div className={settingtype === 'Setting/notification' ? SettingStyle.setting_opt_active : SettingStyle.setting_opt} onClick={() => setsettingtype('Setting/notification')}>\r\n            <i className=\"fa-solid fa-bell\" /> Notification\r\n          </div>\r\n          <div className={settingtype === 'Setting/support' ? SettingStyle.setting_opt_active : SettingStyle.setting_opt} onClick={() => setsettingtype('Setting/support')}>\r\n            <i className=\"fa-solid fa-headset\" /> Support\r\n          </div>\r\n        </div>\r\n        <div className={SettingStyle.setting_opt_right}>\r\n          {renderSettingContent()}\r\n        </div>\r\n      </div>\r\n      {darkModePopup && (\r\n        <div className={SettingStyle.darkModePopup}>\r\n          <div className={SettingStyle.popupContent}>\r\n            <h3 className=\"exclude-dark-mode\">Dark Mode</h3>\r\n            <p className=\"exclude-dark-mode\">Choose how your profile experience looks for this device.</p>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className={SettingStyle.circularCheckbox}\r\n                  checked={darkMode === 'Device settings'}\r\n                  onChange={() => handleDarkModeSelection('Device settings')}\r\n                />\r\n                Device settings\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className={SettingStyle.circularCheckbox}\r\n                  checked={darkMode === 'Always on'}\r\n                  onChange={() => handleDarkModeSelection('Always on')}\r\n                />\r\n                Always on\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className={SettingStyle.circularCheckbox}\r\n                  checked={darkMode === 'Always off'}\r\n                  onChange={() => handleDarkModeSelection('Always off')}\r\n                />\r\n                Always off\r\n              </label>\r\n            </div>\r\n            <p className=\"exclude-dark-mode\">If you choose Device settings, this app will use the mode that's already selected in this device's settings.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;"],"names":["name","profileImage","useSelector","state","Assessment","currentUser","settingtype","setsettingtype","useState","email","darkModePopup","setDarkModePopup","darkMode","setDarkMode","localStorage","getItem","navi","useNavigate","dispatch","useDispatch","useEffect","applyDarkMode","body","document","classList","add","remove","handleDarkModeSelection","mode","setItem","del","setDel","handleDeleteAccount","handlePopupClose","handleAgree","axios","delete","concat","then","response","data","success","toast","msg","handleUserLogOut","error","catch","err","message","_jsxs","className","SettingStyle","my_setting_container","children","my_profile_box","_jsx","__hrImg","title","src","alt","onError","e","target","__pfGreet","Setting_opt_container","setting_opt_left","setting_opt_active","setting_opt","onClick","setting_opt_right","renderSettingContent","profile_designs","Profile_cont2","Profile_cont2_One","FaSync","RiUserSettingsFill","TbUserExclamation","privacySettings","__pfDeleteBtn","GoTrash","__popupDelete","__btnAgree","__btnCancel","serviceSettings","href","notification","Profile_cont1","checkboxex","htmlFor","checkbox1","type","id","click","supportContent","contactDetails","supportOptions","feedbackForm","placeholder","popupContent","circularCheckbox","checked","onChange"],"sourceRoot":""}