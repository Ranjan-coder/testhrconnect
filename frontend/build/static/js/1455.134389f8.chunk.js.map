{"version":3,"file":"static/js/1455.134389f8.chunk.js","mappings":"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","sources":["../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/performance-now/src/performance-now.coffee","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/raf/index.js","../node_modules/javascript-time-ago/locale/en.json.js","../node_modules/relative-time-format/source/LocaleDataStore.js","../node_modules/relative-time-format/source/resolveLocale.js","../node_modules/relative-time-format/source/PluralRuleFunctions.js","../node_modules/relative-time-format/source/getPluralRulesLocale.js","../node_modules/relative-time-format/source/PluralRules.js","../node_modules/relative-time-format/source/RelativeTimeFormat.js","../node_modules/javascript-time-ago/source/cache.js","../node_modules/javascript-time-ago/source/locale.js","../node_modules/javascript-time-ago/source/isStyleObject.js","../node_modules/javascript-time-ago/source/steps/units.js","../node_modules/javascript-time-ago/source/steps/getStepDenominator.js","../node_modules/javascript-time-ago/source/round.js","../node_modules/javascript-time-ago/source/steps/getStepMinTime.js","../node_modules/javascript-time-ago/source/steps/getStep.js","../node_modules/javascript-time-ago/source/steps/getTimeToNextUpdateForUnit.js","../node_modules/javascript-time-ago/source/steps/getTimeToNextUpdate.js","../node_modules/javascript-time-ago/source/LocaleDataStore.js","../node_modules/javascript-time-ago/source/steps/round.js","../node_modules/javascript-time-ago/source/style/round.js","../node_modules/javascript-time-ago/source/style/roundMinute.js","../node_modules/javascript-time-ago/source/steps/approximate.js","../node_modules/javascript-time-ago/source/style/approximate.js","../node_modules/javascript-time-ago/source/style/approximateTime.js","../node_modules/javascript-time-ago/source/steps/helpers.js","../node_modules/javascript-time-ago/source/style/twitter.js","../node_modules/javascript-time-ago/source/style/twitterNow.js","../node_modules/javascript-time-ago/source/style/twitterMinute.js","../node_modules/javascript-time-ago/source/style/twitterMinuteNow.js","../node_modules/javascript-time-ago/source/style/twitterFirstMinute.js","../node_modules/javascript-time-ago/source/style/mini.js","../node_modules/javascript-time-ago/source/style/miniNow.js","../node_modules/javascript-time-ago/source/style/miniMinute.js","../node_modules/javascript-time-ago/source/style/miniMinuteNow.js","../node_modules/javascript-time-ago/source/TimeAgo.js","../node_modules/javascript-time-ago/source/style/getStyleByName.js","../node_modules/react-time-ago/source/Time.js","../node_modules/react-time-ago/source/helpers/locale.js","../node_modules/react-time-ago/source/helpers/cache.js","../node_modules/react-time-ago/source/helpers/getVerboseDateFormatter.js","../node_modules/react-time-ago/source/helpers/date.js","../node_modules/react-time-ago/source/helpers/getTimeAgo.js","../node_modules/react-time-ago/source/Updater.js","../node_modules/react-time-ago/source/helpers/binarySearch.js","../node_modules/react-time-ago/source/useTimeAgo.js","../node_modules/react-time-ago/source/PropTypes.js","../node_modules/react-time-ago/source/ReactTimeAgo.js"],"sourcesContent":["var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","export default {\n\t\"locale\": \"en\",\n\t\"long\": {\n\t\t\"year\": {\n\t\t\t\"previous\": \"last year\",\n\t\t\t\"current\": \"this year\",\n\t\t\t\"next\": \"next year\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} year ago\",\n\t\t\t\t\"other\": \"{0} years ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} year\",\n\t\t\t\t\"other\": \"in {0} years\"\n\t\t\t}\n\t\t},\n\t\t\"quarter\": {\n\t\t\t\"previous\": \"last quarter\",\n\t\t\t\"current\": \"this quarter\",\n\t\t\t\"next\": \"next quarter\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} quarter ago\",\n\t\t\t\t\"other\": \"{0} quarters ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} quarter\",\n\t\t\t\t\"other\": \"in {0} quarters\"\n\t\t\t}\n\t\t},\n\t\t\"month\": {\n\t\t\t\"previous\": \"last month\",\n\t\t\t\"current\": \"this month\",\n\t\t\t\"next\": \"next month\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} month ago\",\n\t\t\t\t\"other\": \"{0} months ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} month\",\n\t\t\t\t\"other\": \"in {0} months\"\n\t\t\t}\n\t\t},\n\t\t\"week\": {\n\t\t\t\"previous\": \"last week\",\n\t\t\t\"current\": \"this week\",\n\t\t\t\"next\": \"next week\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} week ago\",\n\t\t\t\t\"other\": \"{0} weeks ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} week\",\n\t\t\t\t\"other\": \"in {0} weeks\"\n\t\t\t}\n\t\t},\n\t\t\"day\": {\n\t\t\t\"previous\": \"yesterday\",\n\t\t\t\"current\": \"today\",\n\t\t\t\"next\": \"tomorrow\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} day ago\",\n\t\t\t\t\"other\": \"{0} days ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} day\",\n\t\t\t\t\"other\": \"in {0} days\"\n\t\t\t}\n\t\t},\n\t\t\"hour\": {\n\t\t\t\"current\": \"this hour\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} hour ago\",\n\t\t\t\t\"other\": \"{0} hours ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} hour\",\n\t\t\t\t\"other\": \"in {0} hours\"\n\t\t\t}\n\t\t},\n\t\t\"minute\": {\n\t\t\t\"current\": \"this minute\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} minute ago\",\n\t\t\t\t\"other\": \"{0} minutes ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} minute\",\n\t\t\t\t\"other\": \"in {0} minutes\"\n\t\t\t}\n\t\t},\n\t\t\"second\": {\n\t\t\t\"current\": \"now\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} second ago\",\n\t\t\t\t\"other\": \"{0} seconds ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} second\",\n\t\t\t\t\"other\": \"in {0} seconds\"\n\t\t\t}\n\t\t}\n\t},\n\t\"short\": {\n\t\t\"year\": {\n\t\t\t\"previous\": \"last yr.\",\n\t\t\t\"current\": \"this yr.\",\n\t\t\t\"next\": \"next yr.\",\n\t\t\t\"past\": \"{0} yr. ago\",\n\t\t\t\"future\": \"in {0} yr.\"\n\t\t},\n\t\t\"quarter\": {\n\t\t\t\"previous\": \"last qtr.\",\n\t\t\t\"current\": \"this qtr.\",\n\t\t\t\"next\": \"next qtr.\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} qtr. ago\",\n\t\t\t\t\"other\": \"{0} qtrs. ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} qtr.\",\n\t\t\t\t\"other\": \"in {0} qtrs.\"\n\t\t\t}\n\t\t},\n\t\t\"month\": {\n\t\t\t\"previous\": \"last mo.\",\n\t\t\t\"current\": \"this mo.\",\n\t\t\t\"next\": \"next mo.\",\n\t\t\t\"past\": \"{0} mo. ago\",\n\t\t\t\"future\": \"in {0} mo.\"\n\t\t},\n\t\t\"week\": {\n\t\t\t\"previous\": \"last wk.\",\n\t\t\t\"current\": \"this wk.\",\n\t\t\t\"next\": \"next wk.\",\n\t\t\t\"past\": \"{0} wk. ago\",\n\t\t\t\"future\": \"in {0} wk.\"\n\t\t},\n\t\t\"day\": {\n\t\t\t\"previous\": \"yesterday\",\n\t\t\t\"current\": \"today\",\n\t\t\t\"next\": \"tomorrow\",\n\t\t\t\"past\": {\n\t\t\t\t\"one\": \"{0} day ago\",\n\t\t\t\t\"other\": \"{0} days ago\"\n\t\t\t},\n\t\t\t\"future\": {\n\t\t\t\t\"one\": \"in {0} day\",\n\t\t\t\t\"other\": \"in {0} days\"\n\t\t\t}\n\t\t},\n\t\t\"hour\": {\n\t\t\t\"current\": \"this hour\",\n\t\t\t\"past\": \"{0} hr. ago\",\n\t\t\t\"future\": \"in {0} hr.\"\n\t\t},\n\t\t\"minute\": {\n\t\t\t\"current\": \"this minute\",\n\t\t\t\"past\": \"{0} min. ago\",\n\t\t\t\"future\": \"in {0} min.\"\n\t\t},\n\t\t\"second\": {\n\t\t\t\"current\": \"now\",\n\t\t\t\"past\": \"{0} sec. ago\",\n\t\t\t\"future\": \"in {0} sec.\"\n\t\t}\n\t},\n\t\"narrow\": {\n\t\t\"year\": {\n\t\t\t\"previous\": \"last yr.\",\n\t\t\t\"current\": \"this yr.\",\n\t\t\t\"next\": \"next yr.\",\n\t\t\t\"past\": \"{0}y ago\",\n\t\t\t\"future\": \"in {0}y\"\n\t\t},\n\t\t\"quarter\": {\n\t\t\t\"previous\": \"last qtr.\",\n\t\t\t\"current\": \"this qtr.\",\n\t\t\t\"next\": \"next qtr.\",\n\t\t\t\"past\": \"{0}q ago\",\n\t\t\t\"future\": \"in {0}q\"\n\t\t},\n\t\t\"month\": {\n\t\t\t\"previous\": \"last mo.\",\n\t\t\t\"current\": \"this mo.\",\n\t\t\t\"next\": \"next mo.\",\n\t\t\t\"past\": \"{0}mo ago\",\n\t\t\t\"future\": \"in {0}mo\"\n\t\t},\n\t\t\"week\": {\n\t\t\t\"previous\": \"last wk.\",\n\t\t\t\"current\": \"this wk.\",\n\t\t\t\"next\": \"next wk.\",\n\t\t\t\"past\": \"{0}w ago\",\n\t\t\t\"future\": \"in {0}w\"\n\t\t},\n\t\t\"day\": {\n\t\t\t\"previous\": \"yesterday\",\n\t\t\t\"current\": \"today\",\n\t\t\t\"next\": \"tomorrow\",\n\t\t\t\"past\": \"{0}d ago\",\n\t\t\t\"future\": \"in {0}d\"\n\t\t},\n\t\t\"hour\": {\n\t\t\t\"current\": \"this hour\",\n\t\t\t\"past\": \"{0}h ago\",\n\t\t\t\"future\": \"in {0}h\"\n\t\t},\n\t\t\"minute\": {\n\t\t\t\"current\": \"this minute\",\n\t\t\t\"past\": \"{0}m ago\",\n\t\t\t\"future\": \"in {0}m\"\n\t\t},\n\t\t\"second\": {\n\t\t\t\"current\": \"now\",\n\t\t\t\"past\": \"{0}s ago\",\n\t\t\t\"future\": \"in {0}s\"\n\t\t}\n\t},\n\t\"now\": {\n\t\t\"now\": {\n\t\t\t\"current\": \"now\",\n\t\t\t\"future\": \"in a moment\",\n\t\t\t\"past\": \"just now\"\n\t\t}\n\t},\n\t\"mini\": {\n\t\t\"year\": \"{0}yr\",\n\t\t\"month\": \"{0}mo\",\n\t\t\"week\": \"{0}wk\",\n\t\t\"day\": \"{0}d\",\n\t\t\"hour\": \"{0}h\",\n\t\t\"minute\": \"{0}m\",\n\t\t\"second\": \"{0}s\",\n\t\t\"now\": \"now\"\n\t},\n\t\"short-time\": {\n\t\t\"year\": \"{0} yr.\",\n\t\t\"month\": \"{0} mo.\",\n\t\t\"week\": \"{0} wk.\",\n\t\t\"day\": {\n\t\t\t\"one\": \"{0} day\",\n\t\t\t\"other\": \"{0} days\"\n\t\t},\n\t\t\"hour\": \"{0} hr.\",\n\t\t\"minute\": \"{0} min.\",\n\t\t\"second\": \"{0} sec.\"\n\t},\n\t\"long-time\": {\n\t\t\"year\": {\n\t\t\t\"one\": \"{0} year\",\n\t\t\t\"other\": \"{0} years\"\n\t\t},\n\t\t\"month\": {\n\t\t\t\"one\": \"{0} month\",\n\t\t\t\"other\": \"{0} months\"\n\t\t},\n\t\t\"week\": {\n\t\t\t\"one\": \"{0} week\",\n\t\t\t\"other\": \"{0} weeks\"\n\t\t},\n\t\t\"day\": {\n\t\t\t\"one\": \"{0} day\",\n\t\t\t\"other\": \"{0} days\"\n\t\t},\n\t\t\"hour\": {\n\t\t\t\"one\": \"{0} hour\",\n\t\t\t\"other\": \"{0} hours\"\n\t\t},\n\t\t\"minute\": {\n\t\t\t\"one\": \"{0} minute\",\n\t\t\t\"other\": \"{0} minutes\"\n\t\t},\n\t\t\"second\": {\n\t\t\t\"one\": \"{0} second\",\n\t\t\t\"other\": \"{0} seconds\"\n\t\t}\n\t}\n}","// Fallback locale.\r\n// (when not a single one of the supplied \"preferred\" locales is available)\r\nlet defaultLocale = 'en'\r\n\r\n// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\n// According to the spec BCP 47 language tags are case-insensitive.\r\n// https://tools.ietf.org/html/rfc5646\r\nconst lowercaseLocaleLookup = {}\r\n\r\nexport function getDefaultLocale() {\r\n  return defaultLocale\r\n}\r\n\r\nexport function setDefaultLocale(locale) {\r\n  defaultLocale = locale\r\n}\r\n\r\n/**\r\n * Gets locale data previously added by `addLocaleData()`.\r\n * @return  {object} [localeData]\r\n */\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\n/**\r\n * Adds locale data.\r\n * Is called by `RelativeTimeFormat.addLocale(...)`.\r\n * @param  {object} localeData\r\n */\r\nexport function addLocaleData(localeData) {\r\n  if (!localeData) {\r\n    throw new Error('No locale data passed')\r\n  }\r\n  // This locale data is stored in a global variable\r\n  // and later used when calling `.format(time)`.\r\n  localesData[localeData.locale] = localeData\r\n  lowercaseLocaleLookup[localeData.locale.toLowerCase()] = localeData.locale\r\n}\r\n\r\n/**\r\n * Returns a locale for which locale data has been added\r\n * via `RelativeTimeFormat.addLocale(...)`.\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n */\r\nexport function resolveLocale(locale) {\r\n\tif (localesData[locale]) {\r\n\t\treturn locale\r\n\t}\r\n\tif (lowercaseLocaleLookup[locale.toLowerCase()]) {\r\n\t\treturn lowercaseLocaleLookup[locale.toLowerCase()]\r\n\t}\r\n}","import {\r\n  resolveLocale as resolveLocaleForData\r\n} from './LocaleDataStore.js'\r\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * @param  {string} locale\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocale(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocale(\"xx-Latn\")\r\n */\r\nexport default function resolveLocale(locale, options = {}) {\r\n  const localeMatcher = options.localeMatcher || 'lookup'\r\n  switch (localeMatcher) {\r\n    case 'lookup':\r\n      return resolveLocaleLookup(locale)\r\n    // \"best fit\" locale matching is not supported.\r\n    // https://github.com/catamphetamine/relative-time-format/issues/2\r\n    case 'best fit':\r\n      // return resolveLocaleBestFit(locale)\r\n      return resolveLocaleLookup(locale)\r\n    default:\r\n      throw new RangeError(`Invalid \"localeMatcher\" option: ${localeMatcher}`)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * Starts from the most specific locale and gradually\r\n * falls back to less specific ones.\r\n * This is a basic implementation of the \"lookup\" algorithm.\r\n * https://tools.ietf.org/html/rfc4647#section-3.4\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocaleLookup(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocaleLookup(\"xx-Latn\")\r\n */\r\nexport function resolveLocaleLookup(locale) {\r\n  const resolvedLocale = resolveLocaleForData(locale)\r\n  if (resolvedLocale) {\r\n    return resolvedLocale\r\n  }\r\n  // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n  const parts = locale.split('-')\r\n  while (locale.length > 1) {\r\n    parts.pop()\r\n    locale = parts.join('-')\r\n    const resolvedLocale = resolveLocaleForData(locale)\r\n    if (resolvedLocale) {\r\n      return resolvedLocale\r\n    }\r\n  }\r\n}\r\n","// (this file was autogenerated by `generate-locales`)\n// \"plural rules\" functions are not stored in locale JSON files because they're not strings.\n// This file isn't big — it's about 5 kilobytes in size (minified).\n// Alternatively, the pluralization rules for each locale could be stored\n// in their JSON files in a non-parsed form and later parsed via `make-plural` library.\n// But `make-plural` library itself is relatively big in size:\n// `make-plural.min.js` is about 6 kilobytes (https://unpkg.com/make-plural/).\n// So, it's more practical to bypass runtime `make-plural` pluralization rules compilation\n// and just include the already compiled pluarlization rules for all locales in the library code.\n\nvar $ = {\n\taf: (n) => n == 1 ? 'one' : 'other',\n\tam: (n) => n >= 0 && n <= 1 ? 'one' : 'other',\n\tar: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n\t\treturn n == 0 ? 'zero'\n\t\t\t: n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: (n100 >= 3 && n100 <= 10) ? 'few'\n\t\t\t: (n100 >= 11 && n100 <= 99) ? 'many'\n\t\t\t: 'other';\n\t},\n\tast: (n) => {\n\t\tconst s = String(n).split('.'), v0 = !s[1];\n\t\treturn n == 1 && v0 ? 'one' : 'other';\n\t},\n\tbe: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n\t\treturn n10 == 1 && n100 != 11 ? 'one'\n\t\t\t: (n10 >= 2 && n10 <= 4) && (n100 < 12 || n100 > 14) ? 'few'\n\t\t\t: t0 && n10 == 0 || (n10 >= 5 && n10 <= 9) || (n100 >= 11 && n100 <= 14) ? 'many'\n\t\t\t: 'other';\n\t},\n\tbr: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), n1000000 = t0 && s[0].slice(-6);\n\t\treturn n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91 ? 'one'\n\t\t\t: n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92 ? 'two'\n\t\t\t: ((n10 == 3 || n10 == 4) || n10 == 9) && (n100 < 10 || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90 || n100 > 99) ? 'few'\n\t\t\t: n != 0 && t0 && n1000000 == 0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tbs: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n\t\treturn v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n\t\t\t: v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n\t\t\t: 'other';\n\t},\n\tca: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: i != 0 && i1000000 == 0 && v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tceb: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n\t\treturn v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n\t},\n\tcs: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1];\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: (i >= 2 && i <= 4) && v0 ? 'few'\n\t\t\t: !v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tcy: (n) => n == 0 ? 'zero'\n\t\t\t: n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: n == 3 ? 'few'\n\t\t\t: n == 6 ? 'many'\n\t\t\t: 'other',\n\tda: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n;\n\t\treturn n == 1 || !t0 && (i == 0 || i == 1) ? 'one' : 'other';\n\t},\n\tdsb: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i100 = i.slice(-2), f100 = f.slice(-2);\n\t\treturn v0 && i100 == 1 || f100 == 1 ? 'one'\n\t\t\t: v0 && i100 == 2 || f100 == 2 ? 'two'\n\t\t\t: v0 && (i100 == 3 || i100 == 4) || (f100 == 3 || f100 == 4) ? 'few'\n\t\t\t: 'other';\n\t},\n\tdz: (n) => 'other',\n\tes: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n\t\treturn n == 1 ? 'one'\n\t\t\t: i != 0 && i1000000 == 0 && v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tff: (n) => n >= 0 && n < 2 ? 'one' : 'other',\n\tfr: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n\t\treturn n >= 0 && n < 2 ? 'one'\n\t\t\t: i != 0 && i1000000 == 0 && v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tga: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n;\n\t\treturn n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: (t0 && n >= 3 && n <= 6) ? 'few'\n\t\t\t: (t0 && n >= 7 && n <= 10) ? 'many'\n\t\t\t: 'other';\n\t},\n\tgd: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n;\n\t\treturn (n == 1 || n == 11) ? 'one'\n\t\t\t: (n == 2 || n == 12) ? 'two'\n\t\t\t: ((t0 && n >= 3 && n <= 10) || (t0 && n >= 13 && n <= 19)) ? 'few'\n\t\t\t: 'other';\n\t},\n\the: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1];\n\t\treturn i == 1 && v0 || i == 0 && !v0 ? 'one'\n\t\t\t: i == 2 && v0 ? 'two'\n\t\t\t: 'other';\n\t},\n\tis: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], t = (s[1] || '').replace(/0+$/, ''), t0 = Number(s[0]) == n, i10 = i.slice(-1), i100 = i.slice(-2);\n\t\treturn t0 && i10 == 1 && i100 != 11 || t % 10 == 1 && t % 100 != 11 ? 'one' : 'other';\n\t},\n\tksh: (n) => n == 0 ? 'zero'\n\t\t\t: n == 1 ? 'one'\n\t\t\t: 'other',\n\tlt: (n) => {\n\t\tconst s = String(n).split('.'), f = s[1] || '', t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n\t\treturn n10 == 1 && (n100 < 11 || n100 > 19) ? 'one'\n\t\t\t: (n10 >= 2 && n10 <= 9) && (n100 < 11 || n100 > 19) ? 'few'\n\t\t\t: f != 0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tlv: (n) => {\n\t\tconst s = String(n).split('.'), f = s[1] || '', v = f.length, t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n\t\treturn t0 && n10 == 0 || (n100 >= 11 && n100 <= 19) || v == 2 && (f100 >= 11 && f100 <= 19) ? 'zero'\n\t\t\t: n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one'\n\t\t\t: 'other';\n\t},\n\tmk: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n\t\treturn v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one' : 'other';\n\t},\n\tmt: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n\t\treturn n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: n == 0 || (n100 >= 3 && n100 <= 10) ? 'few'\n\t\t\t: (n100 >= 11 && n100 <= 19) ? 'many'\n\t\t\t: 'other';\n\t},\n\tpa: (n) => (n == 0 || n == 1) ? 'one' : 'other',\n\tpl: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n\t\t\t: v0 && i != 1 && (i10 == 0 || i10 == 1) || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 12 && i100 <= 14) ? 'many'\n\t\t\t: 'other';\n\t},\n\tpt: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n\t\treturn (i == 0 || i == 1) ? 'one'\n\t\t\t: i != 0 && i1000000 == 0 && v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tro: (n) => {\n\t\tconst s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: !v0 || n == 0 || n != 1 && (n100 >= 1 && n100 <= 19) ? 'few'\n\t\t\t: 'other';\n\t},\n\tru: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n\t\treturn v0 && i10 == 1 && i100 != 11 ? 'one'\n\t\t\t: v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n\t\t\t: v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 11 && i100 <= 14) ? 'many'\n\t\t\t: 'other';\n\t},\n\tse: (n) => n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: 'other',\n\tsi: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '';\n\t\treturn (n == 0 || n == 1) || i == 0 && f == 1 ? 'one' : 'other';\n\t},\n\tsl: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i100 = i.slice(-2);\n\t\treturn v0 && i100 == 1 ? 'one'\n\t\t\t: v0 && i100 == 2 ? 'two'\n\t\t\t: v0 && (i100 == 3 || i100 == 4) || !v0 ? 'few'\n\t\t\t: 'other';\n\t}\n}\n\n$.as = $.am\n$.az = $.af\n$.bg = $.af\n$.bn = $.am\n$.brx = $.af\n$.ce = $.af\n$.chr = $.af\n$.de = $.ast\n$.ee = $.af\n$.el = $.af\n$.en = $.ast\n$.et = $.ast\n$.eu = $.af\n$.fa = $.am\n$.fi = $.ast\n$.fil = $.ceb\n$.fo = $.af\n$.fur = $.af\n$.fy = $.ast\n$.gl = $.ast\n$.gu = $.am\n$.ha = $.af\n$.hi = $.am\n$.hr = $.bs\n$.hsb = $.dsb\n$.hu = $.af\n$.hy = $.ff\n$.ia = $.ast\n$.id = $.dz\n$.ig = $.dz\n$.it = $.ca\n$.ja = $.dz\n$.jgo = $.af\n$.jv = $.dz\n$.ka = $.af\n$.kea = $.dz\n$.kk = $.af\n$.kl = $.af\n$.km = $.dz\n$.kn = $.am\n$.ko = $.dz\n$.ks = $.af\n$.ku = $.af\n$.ky = $.af\n$.lb = $.af\n$.lkt = $.dz\n$.lo = $.dz\n$.ml = $.af\n$.mn = $.af\n$.mr = $.af\n$.ms = $.dz\n$.my = $.dz\n$.nb = $.af\n$.ne = $.af\n$.nl = $.ast\n$.nn = $.af\n$.no = $.af\n$.or = $.af\n$.pcm = $.am\n$.ps = $.af\n$.rm = $.af\n$.sah = $.dz\n$.sc = $.ast\n$.sd = $.af\n$.sk = $.cs\n$.so = $.af\n$.sq = $.af\n$.sr = $.bs\n$.su = $.dz\n$.sv = $.ast\n$.sw = $.ast\n$.ta = $.af\n$.te = $.af\n$.th = $.dz\n$.ti = $.pa\n$.tk = $.af\n$.to = $.dz\n$.tr = $.af\n$.ug = $.af\n$.uk = $.ru\n$.ur = $.ast\n$.uz = $.af\n$.vi = $.dz\n$.wae = $.af\n$.wo = $.dz\n$.xh = $.af\n$.yi = $.ast\n$.yo = $.dz\n$.yue = $.dz\n$.zh = $.dz\n$.zu = $.am\n\nexport default $","/**\r\n * Returns a `locale` for which a function exists in `./PluralRuleFunctions.js`.\r\n * @param  {string} locale\r\n * @return {string}\r\n * @example\r\n * getPluralRulesLocale(\"ru-RU-Cyrl\") // Returns \"ru\".\r\n */\r\nexport default function getPluralRulesLocale(locale) {\r\n\t// \"pt\" language is the only one having different pluralization rules\r\n\t// for the one (\"pt\") (Portuguese) locale and the other (\"pt-PT\") (European Portuguese).\r\n\t// http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\r\n\t// (see the entries for \"pt\" and \"pt_PT\" there)\r\n\tif (locale === 'pt-PT') {\r\n\t\treturn locale\r\n\t}\r\n\treturn getLanguageFromLanguageTag(locale)\r\n}\r\n\r\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\r\nconst LANGUAGE_REG_EXP = /^([a-z0-9]+)/i\r\nfunction getLanguageFromLanguageTag(languageTag) {\r\n\tconst match = languageTag.match(LANGUAGE_REG_EXP)\r\n\tif (!match) {\r\n\t\tthrow new TypeError(`Invalid locale: ${languageTag}`)\r\n\t}\r\n\treturn match[1]\r\n}\r\n","// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// export { default as default } from 'intl-plural-rules-polyfill/cardinal'\r\n\r\nimport PluralRuleFunctions from \"./PluralRuleFunctions.js\"\r\nimport getPluralRulesLocale from \"./getPluralRulesLocale.js\"\r\n\r\n/**\r\n * `Intl.PluralRules` polyfill.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules\r\n */\r\nexport default class PluralRules {\r\n\tconstructor(locale, options) {\r\n\t\tconst locales = PluralRules.supportedLocalesOf(locale)\r\n\t\tif (locales.length === 0) {\r\n\t\t\tthrow new RangeError(\"Unsupported locale: \" + locale)\r\n\t\t}\r\n\t\tif (options && options.type !== \"cardinal\") {\r\n\t\t\tthrow new RangeError(\"Only \\\"cardinal\\\" \\\"type\\\" is supported\")\r\n\t\t}\r\n\t\tthis.$ = PluralRuleFunctions[getPluralRulesLocale(locales[0])]\r\n\t}\r\n\tselect(number) {\r\n\t\treturn this.$(number)\r\n\t}\r\n\tstatic supportedLocalesOf(locales) {\r\n\t\tif (typeof locales === \"string\") {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\t\treturn locales.filter(locale => PluralRuleFunctions[getPluralRulesLocale(locale)])\r\n\t}\r\n}","import {\r\n  getDefaultLocale,\r\n  setDefaultLocale,\r\n  getLocaleData,\r\n  addLocaleData\r\n} from './LocaleDataStore.js'\r\n\r\nimport resolveLocale from './resolveLocale.js'\r\nimport PluralRules from './PluralRules.js'\r\n// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// import PluralRules from 'intl-plural-rules-polyfill/cardinal'\r\n\r\n// Valid time units.\r\nexport const UNITS = [\r\n  \"second\",\r\n  \"minute\",\r\n  \"hour\",\r\n  \"day\",\r\n  \"week\",\r\n  \"month\",\r\n  \"quarter\",\r\n  \"year\"\r\n]\r\n\r\n// Valid values for the `numeric` option.\r\nconst NUMERIC_VALUES = [\r\n  \"auto\",\r\n  \"always\"\r\n]\r\n\r\n// Valid values for the `style` option.\r\nconst STYLE_VALUES = [\r\n  \"long\",\r\n  \"short\",\r\n  \"narrow\"\r\n]\r\n\r\n// Valid values for the `localeMatcher` option.\r\nconst LOCALE_MATCHER_VALUES = [\r\n  \"lookup\",\r\n  \"best fit\"\r\n]\r\n\r\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\r\nexport default class RelativeTimeFormat {\r\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\r\n  constructor(locales = [], options = {}) {\r\n    const {\r\n      numeric,\r\n      style,\r\n      localeMatcher\r\n    } = options\r\n\r\n    this.numeric = \"always\"\r\n    this.style = \"long\"\r\n    this.localeMatcher = \"lookup\"\r\n\r\n    // Set `numeric` option.\r\n    if (numeric !== undefined) {\r\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\r\n        throw new RangeError(`Invalid \"numeric\" option: ${numeric}`)\r\n      }\r\n      this.numeric = numeric\r\n    }\r\n\r\n    // Set `style` option.\r\n    if (style !== undefined) {\r\n      if (STYLE_VALUES.indexOf(style) < 0) {\r\n        throw new RangeError(`Invalid \"style\" option: ${style}`)\r\n      }\r\n      this.style = style\r\n    }\r\n\r\n    // Set `localeMatcher` option.\r\n    if (localeMatcher !== undefined) {\r\n      if (LOCALE_MATCHER_VALUES.indexOf(localeMatcher) < 0) {\r\n        throw new RangeError(`Invalid \"localeMatcher\" option: ${localeMatcher}`)\r\n      }\r\n      this.localeMatcher = localeMatcher\r\n    }\r\n\r\n    // Set `locale`.\r\n    // Convert `locales` to an array.\r\n    if (typeof locales === 'string') {\r\n      locales = [locales]\r\n    }\r\n    // Add default locale.\r\n    locales.push(getDefaultLocale())\r\n    // Choose the most appropriate locale.\r\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\r\n      localeMatcher: this.localeMatcher\r\n    })[0]\r\n    if (!this.locale) {\r\n      throw new Error(\"No supported locale was found\")\r\n    }\r\n\r\n    // Construct an `Intl.PluralRules` instance (polyfill).\r\n    if (PluralRules.supportedLocalesOf(this.locale).length > 0) {\r\n      this.pluralRules = new PluralRules(this.locale)\r\n    } else {\r\n      console.warn(`\"${this.locale}\" locale is not supported`)\r\n    }\r\n\r\n    // Use `Intl.NumberFormat` for formatting numbers (when available).\r\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\r\n      this.numberFormat = new Intl.NumberFormat(this.locale)\r\n      this.numberingSystem = this.numberFormat.resolvedOptions().numberingSystem\r\n    } else {\r\n      this.numberingSystem = 'latn'\r\n    }\r\n\r\n    this.locale = resolveLocale(this.locale, {\r\n      localeMatcher: this.localeMatcher\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\r\n  format() {\r\n    const [number, unit] = parseFormatArgs(arguments)\r\n    return this.getRule(number, unit).replace('{0}', this.formatNumber(Math.abs(number)))\r\n  }\r\n\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {Object[]} The parts (`{ type, value, unit? }`).\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Version 1 (deprecated).\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"day\", value: \"100\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   * //\r\n   * // Version 2.\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   */\r\n  formatToParts() {\r\n    const [number, unit] = parseFormatArgs(arguments)\r\n    const rule = this.getRule(number, unit)\r\n    const valueIndex = rule.indexOf(\"{0}\")\r\n    // \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (valueIndex < 0) {\r\n      return [{\r\n        type: \"literal\",\r\n        value: rule\r\n      }]\r\n    }\r\n    let parts = []\r\n    if (valueIndex > 0) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(0, valueIndex)\r\n      })\r\n    }\r\n    parts = parts.concat(\r\n      this.formatNumberToParts(Math.abs(number))\r\n        .map(part => ({ ...part, unit }))\r\n    )\r\n    if (valueIndex + \"{0}\".length < rule.length - 1) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(valueIndex + \"{0}\".length)\r\n      })\r\n    }\r\n    return parts\r\n  }\r\n\r\n  /**\r\n   * Returns formatting rule for `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"{0} days ago\"\r\n   * getRule(-2, \"day\")\r\n   */\r\n  getRule(value, unit) {\r\n    // Get locale-specific time interval formatting rules\r\n    // of a given `style` for the given value of measurement `unit`.\r\n    //\r\n    // E.g.:\r\n    //\r\n    // ```json\r\n    // {\r\n    //  \"past\": {\r\n    //    \"one\": \"a second ago\",\r\n    //    \"other\": \"{0} seconds ago\"\r\n    //  },\r\n    //  \"future\": {\r\n    //    \"one\": \"in a second\",\r\n    //    \"other\": \"in {0} seconds\"\r\n    //  }\r\n    // }\r\n    // ```\r\n    //\r\n    const unitMessages = getLocaleData(this.locale)[this.style][unit]\r\n    // Bundle size optimization technique for styles like\r\n    // \"tiny\" in `javascript-time-ago`: \"1m\", \"2h\", \"3d\"...\r\n    if (typeof unitMessages === 'string') {\r\n      return unitMessages\r\n    }\r\n    // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (this.numeric === \"auto\") {\r\n      // \"yesterday\", \"the day before yesterday\", etc.\r\n      if (value === -2 || value === -1) {\r\n        const message = unitMessages[`previous${value === -1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"tomorrow\", \"the day after tomorrow\", etc.\r\n      else if (value === 1 || value === 2) {\r\n        const message = unitMessages[`next${value === 1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"today\"\r\n      else if (value === 0) {\r\n        if (unitMessages.current) {\r\n          return unitMessages.current\r\n        }\r\n      }\r\n    }\r\n    // Choose either \"past\" or \"future\" based on time `value` sign.\r\n    // If there's only \"other\" then it's being collapsed.\r\n    // (the resulting bundle size optimization technique)\r\n    const pluralizedMessages = unitMessages[isNegative(value) ? \"past\" : \"future\"]\r\n    // Bundle size optimization technique for styles like \"narrow\"\r\n    // having messages like \"in {0} d.\" or \"{0} d. ago\".\r\n    if (typeof pluralizedMessages === \"string\") {\r\n      return pluralizedMessages\r\n    }\r\n    // Quantify `value`.\r\n    // There seems to be no such locale in CLDR\r\n    // for which \"plural rules\" function is missing.\r\n    const quantifier = this.pluralRules && this.pluralRules.select(Math.abs(value)) || 'other'\r\n    // \"other\" rule is supposed to be always present.\r\n    // If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n    return pluralizedMessages[quantifier] || pluralizedMessages.other\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a string.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {string}\r\n   */\r\n  formatNumber(number) {\r\n    return this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a list of parts.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {object[]}\r\n   */\r\n  formatNumberToParts(number) {\r\n    // `Intl.NumberFormat.formatToParts()` is not present, for example,\r\n    // in Node.js 8.x while `Intl.NumberFormat` itself is present.\r\n    return this.numberFormat && this.numberFormat.formatToParts ?\r\n      this.numberFormat.formatToParts(number) :\r\n      [{\r\n        type: \"integer\",\r\n        value: this.formatNumber(number)\r\n      }]\r\n  }\r\n\r\n  /**\r\n   * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n   * @return {Object}\r\n   */\r\n  resolvedOptions() {\r\n    return {\r\n      locale: this.locale,\r\n      style: this.style,\r\n      numeric: this.numeric,\r\n      numberingSystem: this.numberingSystem\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\r\nRelativeTimeFormat.supportedLocalesOf = function(locales, options = {}) {\r\n  // Convert `locales` to an array.\r\n  if (typeof locales === 'string') {\r\n    locales = [locales]\r\n  } else if (!Array.isArray(locales)) {\r\n    throw new TypeError('Invalid \"locales\" argument')\r\n  }\r\n  return locales.filter(locale => resolveLocale(locale, options))\r\n}\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nRelativeTimeFormat.addLocale = addLocaleData\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale\r\n\r\n/**\r\n * Export `Intl.PluralRules` just in case it's used somewhere else.\r\n */\r\nRelativeTimeFormat.PluralRules = PluralRules\r\n\r\n// The specification allows units to be in plural form.\r\n// Convert plural to singular.\r\n// Example: \"seconds\" -> \"second\".\r\nconst UNIT_ERROR = 'Invalid \"unit\" argument'\r\nfunction parseUnit(unit) {\r\n  if (typeof unit === 'symbol') {\r\n    throw new TypeError(UNIT_ERROR)\r\n  }\r\n  if (typeof unit !== 'string') {\r\n    throw new RangeError(`${UNIT_ERROR}: ${unit}`)\r\n  }\r\n  if (unit[unit.length - 1] === 's') {\r\n    unit = unit.slice(0, unit.length - 1)\r\n  }\r\n  if (UNITS.indexOf(unit) < 0) {\r\n    throw new RangeError(`${UNIT_ERROR}: ${unit}`)\r\n  }\r\n  return unit\r\n}\r\n\r\n// Converts `value` to a `Number`.\r\n// The specification allows value to be a non-number.\r\n// For example, \"-0\" is supposed to be treated as `-0`.\r\n// Also checks if `value` is a finite number.\r\nconst NUMBER_ERROR = 'Invalid \"number\" argument'\r\nfunction parseNumber(value) {\r\n  value = Number(value)\r\n  if (Number.isFinite) {\r\n    if (!Number.isFinite(value)) {\r\n      throw new RangeError(`${NUMBER_ERROR}: ${value}`)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n/**\r\n * Tells `0` from `-0`.\r\n * https://stackoverflow.com/questions/7223359/are-0-and-0-the-same\r\n * @param  {number} number\r\n * @return {Boolean}\r\n * @example\r\n * isNegativeZero(0); // false\r\n * isNegativeZero(-0); // true\r\n */\r\nfunction isNegativeZero(number) {\r\n  return 1 / number === -Infinity\r\n}\r\n\r\nfunction isNegative(number) {\r\n  return number < 0 || number === 0 && isNegativeZero(number)\r\n}\r\n\r\nfunction parseFormatArgs(args) {\r\n  if (args.length < 2) {\r\n    throw new TypeError(`\"unit\" argument is required`)\r\n  }\r\n  return [\r\n    parseNumber(args[0]),\r\n    parseUnit(args[1])\r\n  ]\r\n}","/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tconstructor() {\r\n\t\tthis.cache = {}\r\n\t}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}","/**\r\n * Chooses the most appropriate locale\r\n * (one of the registered ones)\r\n * based on the list of preferred `locales` supplied by the user.\r\n *\r\n * @param {string[]} locales - the list of preferable locales (in [IETF format](https://en.wikipedia.org/wiki/IETF_language_tag)).\r\n * @param {Function} isLocaleDataAvailable - tests if a locale is available.\r\n *\r\n * @returns {string} The most suitable locale.\r\n *\r\n * @example\r\n * // Returns 'en'\r\n * chooseLocale(['en-US'], undefined, (locale) => locale === 'ru' || locale === 'en')\r\n */\r\nexport default function chooseLocale(locales, isLocaleDataAvailable) {\r\n\t// This is not an intelligent algorithm,\r\n\t// but it will do for this library's case.\r\n\t// `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n\tfor (let locale of locales) {\r\n\t\tif (isLocaleDataAvailable(locale)) {\r\n\t\t\treturn locale\r\n\t\t}\r\n\t\tconst parts = locale.split('-')\r\n\t\twhile (parts.length > 1) {\r\n\t\t\tparts.pop()\r\n\t\t\tlocale = parts.join('-')\r\n\t\t\tif (isLocaleDataAvailable(locale)) {\r\n\t\t\t\treturn locale\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthrow new Error(`No locale data has been registered for any of the locales: ${locales.join(', ')}`)\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}\r\n","export default function isStyleObject(object) {\r\n\treturn isObject(object) && (\r\n\t\tArray.isArray(object.steps) ||\r\n\t\t// `gradation` property is deprecated: it has been renamed to `steps`.\r\n\t\tArray.isArray(object.gradation) ||\r\n\t\t// `flavour` property is deprecated: it has been renamed to `labels`.\r\n\t\tArray.isArray(object.flavour) ||\r\n\t\ttypeof object.flavour === 'string' ||\r\n\t\tArray.isArray(object.labels) ||\r\n\t\ttypeof object.labels === 'string' ||\r\n\t\t// `units` property is deprecated.\r\n\t\tArray.isArray(object.units) ||\r\n\t\t// `custom` property is deprecated.\r\n\t\ttypeof object.custom === 'function'\r\n\t)\r\n}\r\n\r\nconst OBJECT_CONSTRUCTOR = {}.constructor\r\nfunction isObject(object) {\r\n\treturn typeof object !== undefined && object !== null && object.constructor === OBJECT_CONSTRUCTOR\r\n}","export const minute = 60 // in seconds\r\n\r\nexport const hour = 60 * minute // in seconds\r\n\r\nexport const day = 24 * hour // in seconds\r\n\r\nexport const week = 7 * day // in seconds\r\n\r\n// https://www.quora.com/What-is-the-average-number-of-days-in-a-month\r\nexport const month = 30.44 * day // in seconds\r\n\r\n// \"400 years have 146097 days (taking into account leap year rules)\"\r\nexport const year = (146097 / 400) * day // in seconds\r\n\r\nexport function getSecondsInUnit(unit) {\r\n\tswitch (unit) {\r\n\t\tcase 'second':\r\n\t\t\treturn 1\r\n\t\tcase 'minute':\r\n\t\t\treturn minute\r\n\t\tcase 'hour':\r\n\t\t\treturn hour\r\n\t\tcase 'day':\r\n\t\t\treturn day\r\n\t\tcase 'week':\r\n\t\t\treturn week\r\n\t\tcase 'month':\r\n\t\t\treturn month\r\n\t\tcase 'year':\r\n\t\t\treturn year\r\n\t}\r\n}\r\n\r\n// export function getPreviousUnitFor(unit) {\r\n// \tswitch (unit) {\r\n// \t\tcase 'second':\r\n// \t\t\treturn 'now'\r\n// \t\tcase 'minute':\r\n// \t\t\treturn 'second'\r\n// \t\tcase 'hour':\r\n// \t\t\treturn 'minute'\r\n// \t\tcase 'day':\r\n// \t\t\treturn 'hour'\r\n// \t\tcase 'week':\r\n// \t\t\treturn 'day'\r\n// \t\tcase 'month':\r\n// \t\t\treturn 'week'\r\n// \t\tcase 'year':\r\n// \t\t\treturn 'month'\r\n// \t}\r\n// }","import { getSecondsInUnit } from './units.js'\r\n\r\nexport default function getStepDenominator(step) {\r\n\t// `factor` is a legacy property.\r\n\tif (step.factor !== undefined) {\r\n\t\treturn step.factor\r\n\t}\r\n\t// \"unit\" is now called \"formatAs\".\r\n\treturn getSecondsInUnit(step.unit || step.formatAs) || 1\r\n}","export function getRoundFunction(round) {\r\n\tswitch (round) {\r\n\t\tcase 'floor':\r\n\t\t\treturn Math.floor\r\n\t\tdefault:\r\n\t\t\treturn Math.round\r\n\t}\r\n}\r\n\r\n// For non-negative numbers.\r\nexport function getDiffRatioToNextRoundedNumber(round) {\r\n\tswitch (round) {\r\n\t\tcase 'floor':\r\n\t\t\t// Math.floor(x) = x\r\n\t\t\t// Math.floor(x + 1) = x + 1\r\n\t\t\treturn 1\r\n\t\tdefault:\r\n\t\t\t// Math.round(x) = x\r\n\t\t\t// Math.round(x + 0.5) = x + 1\r\n\t\t\treturn 0.5\r\n\t}\r\n}","import { getSecondsInUnit } from './units.js'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round.js'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}","import getStepDenominator from './getStepDenominator.js'\r\nimport getStepMinTime from './getStepMinTime.js'\r\nimport { getRoundFunction } from '../round.js'\r\n\r\n/**\r\n * Finds an appropriate `step` of `steps` for the time interval (in seconds).\r\n *\r\n * @param {Object[]} steps - Time formatting steps.\r\n *\r\n * @param {number} secondsPassed - Time interval (in seconds).\r\n *                                 `< 0` for past dates and `> 0` for future dates.\r\n *\r\n * @param {number} options.now - Current timestamp.\r\n *\r\n * @param {boolean} [options.future] - Whether the date should be formatted as a future one\r\n *                                     instead of a past one.\r\n *\r\n * @param {string} [options.round] - (undocumented) Rounding mechanism.\r\n *\r\n * @param {string[]} [options.units] - A list of allowed time units.\r\n *                                     (Example: ['second', 'minute', 'hour', …])\r\n *\r\n * @param {boolean} [options.getNextStep] - Pass true to return `[step, nextStep]` instead of just `step`.\r\n *\r\n * @return {Object|Object[]} [step] — Either a `step` or `[prevStep, step, nextStep]`.\r\n */\r\nexport default function getStep(steps, secondsPassed, { now, future, round, units, getNextStep }) {\r\n\t// Ignore steps having not-supported time units in `formatAs`.\r\n\tsteps = filterStepsByUnits(steps, units)\r\n\tconst step = _getStep(steps, secondsPassed, { now, future, round })\r\n\tif (getNextStep) {\r\n\t\tif (step) {\r\n\t\t\tconst prevStep = steps[steps.indexOf(step) - 1]\r\n\t\t\tconst nextStep = steps[steps.indexOf(step) + 1]\r\n\t\t\treturn [prevStep, step, nextStep]\r\n\t\t}\r\n\t\treturn [undefined, undefined, steps[0]]\r\n\t}\r\n\treturn step\r\n}\r\n\r\nfunction _getStep(steps, secondsPassed, { now, future, round }) {\r\n\t// If no steps fit the conditions then return nothing.\r\n\tif (steps.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Find the most appropriate step.\r\n\tconst i = getStepIndex(steps, secondsPassed, {\r\n\t\tnow,\r\n\t\tfuture: future || secondsPassed < 0,\r\n\t\tround\r\n\t})\r\n\r\n\t// If no step is applicable the return nothing.\r\n\tif (i === -1) {\r\n\t\treturn\r\n\t}\r\n\r\n\tconst step = steps[i]\r\n\r\n\t// Apply granularity to the time amount\r\n\t// (and fall back to the previous step\r\n\t//  if the first level of granularity\r\n\t//  isn't met by this amount)\r\n\tif (step.granularity) {\r\n\t\t// Recalculate the amount of seconds passed based on `granularity`.\r\n\t\tconst secondsPassedGranular = getRoundFunction(round)((Math.abs(secondsPassed) / getStepDenominator(step)) / step.granularity) * step.granularity\r\n\t\t// If the granularity for this step is too high,\r\n\t\t// then fall back to the previous step.\r\n\t\t// (if there is any previous step)\r\n\t\tif (secondsPassedGranular === 0 && i > 0) {\r\n\t\t\treturn steps[i - 1]\r\n\t\t}\r\n\t}\r\n\r\n\treturn step\r\n}\r\n\r\n/**\r\n * Iterates through steps until it finds the maximum one satisfying the `minTime` threshold.\r\n * @param  {Object} steps - Steps.\r\n * @param  {number} secondsPassed - How much seconds have passed since the date till `now`.\r\n * @param  {number} options.now - Current timestamp.\r\n * @param  {boolean} options.future - Whether the time interval should be formatted as a future one.\r\n * @param  {number} [i] - Gradation step currently being tested.\r\n * @return {number} Gradation step index.\r\n */\r\nfunction getStepIndex(steps, secondsPassed, options, i = 0) {\r\n\tconst minTime = getStepMinTime(steps[i], {\r\n\t\tprevStep: steps[i - 1],\r\n\t\ttimestamp: options.now - secondsPassed * 1000,\r\n\t\t...options\r\n\t})\r\n\t// If `minTime` isn't defined or deduceable for this step, then stop.\r\n\tif (minTime === undefined) {\r\n\t\treturn i - 1\r\n\t}\r\n\t// If the `minTime` threshold for moving from previous step\r\n\t// to this step is too high then return the previous step.\r\n\tif (Math.abs(secondsPassed) < minTime) {\r\n\t\treturn i - 1\r\n\t}\r\n\t// If it's the last step then return it.\r\n\tif (i === steps.length - 1) {\r\n\t\treturn i\r\n\t}\r\n\t// Move to the next step.\r\n\treturn getStepIndex(steps, secondsPassed, options, i + 1)\r\n}\r\n\r\n/**\r\n * Leaves only allowed steps.\r\n * @param  {Object[]} steps\r\n * @param  {string[]} units - Allowed time units.\r\n * @return {Object[]}\r\n */\r\nfunction filterStepsByUnits(steps, units) {\r\n\treturn steps.filter(({ unit, formatAs }) => {\r\n\t\t// \"unit\" is now called \"formatAs\".\r\n\t\tunit = unit || formatAs\r\n\t\t// If this step has a `unit` defined\r\n\t\t// then this `unit` must be in the list of allowed `units`.\r\n\t\tif (unit) {\r\n\t\t\treturn units.indexOf(unit) >= 0\r\n\t\t}\r\n\t\t// A step is not required to specify a `unit`:\r\n\t\t// alternatively, it could specify `format()`.\r\n\t\t// (see \"twitter\" style for an example)\r\n\t\treturn true\r\n\t})\r\n}","import { getSecondsInUnit } from './units.js'\r\nimport { getRoundFunction, getDiffRatioToNextRoundedNumber } from '../round.js'\r\n\r\n/**\r\n * Gets the time to next update for a step with a time unit defined.\r\n * @param  {string} unit\r\n * @param  {number} date — The date passed to `.format()`, converted to a timestamp.\r\n * @param  {number} options.now\r\n * @param  {string} [options.round] — (undocumented) Rounding mechanism.\r\n * @return {number} [timeToNextUpdate]\r\n */\r\nexport default function getTimeToNextUpdateForUnit(unit, timestamp, { now, round }) {\r\n\t// For some units, like \"now\", there's no defined amount of seconds in them.\r\n\tif (!getSecondsInUnit(unit)) {\r\n\t\t// If there's no amount of seconds defined for this unit\r\n\t\t// then the update interval can't be determined reliably.\r\n\t\treturn\r\n\t}\r\n\tconst unitDenominator = getSecondsInUnit(unit) * 1000\r\n\tconst future = timestamp > now\r\n\tconst preciseAmount = Math.abs(timestamp - now)\r\n\tconst roundedAmount = getRoundFunction(round)(preciseAmount / unitDenominator) * unitDenominator\r\n\tif (future) {\r\n\t\tif (roundedAmount > 0) {\r\n\t\t\t// Amount decreases with time.\r\n\t\t\treturn (preciseAmount - roundedAmount) +\r\n\t\t\t\tgetDiffToPreviousRoundedNumber(round, unitDenominator)\r\n\t\t} else {\r\n\t\t\t// Refresh right after the zero point,\r\n\t\t\t// when \"future\" changes to \"past\".\r\n\t\t\treturn (preciseAmount - roundedAmount) + 1\r\n\t\t}\r\n\t}\r\n \t// Amount increases with time.\r\n\treturn -(preciseAmount - roundedAmount) + getDiffToNextRoundedNumber(round, unitDenominator)\r\n}\r\n\r\nfunction getDiffToNextRoundedNumber(round, unitDenominator) {\r\n\treturn getDiffRatioToNextRoundedNumber(round) * unitDenominator\r\n}\r\n\r\nfunction getDiffToPreviousRoundedNumber(round, unitDenominator) {\r\n\treturn (1 - getDiffRatioToNextRoundedNumber(round)) * unitDenominator + 1\r\n}","import _getTimeToNextUpdateForUnit from './getTimeToNextUpdateForUnit.js'\r\nimport getStepMinTime from './getStepMinTime.js'\r\nimport { getRoundFunction } from '../round.js'\r\n\r\n// A thousand years is practically a metaphor for \"infinity\".\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nexport const INFINITY = 1000 * YEAR\r\n\r\n/**\r\n * Gets the time to next update for a date and a step.\r\n * @param  {number} date — The date passed to `.format()`, converted to a timestamp.\r\n * @param  {object} step\r\n * @param  {object} [options.previousStep]\r\n * @param  {object} [options.nextStep]\r\n * @param  {number} options.now\r\n * @param  {boolean} options.future\r\n * @param  {string} [options.round] - (undocumented) Rounding mechanism.\r\n * @return {number} [timeToNextUpdate]\r\n */\r\nexport default function getTimeToNextUpdate(date, step, { prevStep, nextStep, now, future, round }) {\r\n\tconst timestamp = date.getTime ? date.getTime() : date\r\n\r\n\tconst getTimeToNextUpdateForUnit = (unit) => _getTimeToNextUpdateForUnit(unit, timestamp, { now, round })\r\n\r\n\t// For future dates, steps move from the last one to the first one,\r\n\t// while for past dates, steps move from the first one to the last one,\r\n\t// due to the fact that time flows in one direction,\r\n\t// and future dates' interval naturally becomes smaller\r\n\t// while past dates' interval naturally grows larger.\r\n\t//\r\n\t// For future dates, it's the transition\r\n\t// from the current step to the previous step,\r\n\t// therefore check the `minTime` of the current step.\r\n\t//\r\n\t// For past dates, it's the transition\r\n\t// from the current step to the next step,\r\n\t// therefore check the `minTime` of the next step.\r\n\t//\r\n\tconst timeToStepChange = getTimeToStepChange(future ? step : nextStep, timestamp, {\r\n\t\tfuture,\r\n\t\tnow,\r\n\t\tround,\r\n\t\tprevStep: future ? prevStep : step,\r\n\t\t// isFirstStep: future && isFirstStep\r\n\t})\r\n\r\n\tif (timeToStepChange === undefined) {\r\n\t\t// Can't reliably determine \"time to next update\"\r\n\t\t// if not all of the steps provide `minTime`.\r\n\t\treturn\r\n\t}\r\n\r\n\tlet timeToNextUpdate\r\n\r\n\tif (step) {\r\n\t\tif (step.getTimeToNextUpdate) {\r\n\t\t\ttimeToNextUpdate = step.getTimeToNextUpdate(timestamp, {\r\n\t\t\t\tgetTimeToNextUpdateForUnit,\r\n\t\t\t\tgetRoundFunction,\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture,\r\n\t\t\t\tround\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (timeToNextUpdate === undefined) {\r\n\t\t\t// \"unit\" is now called \"formatAs\".\r\n\t\t\tconst unit = step.unit || step.formatAs\r\n\t\t\tif (unit) {\r\n\t\t\t\t// For some units, like \"now\", there's no defined amount of seconds in them.\r\n\t\t\t\t// In such cases, `getTimeToNextUpdateForUnit()` returns `undefined`,\r\n\t\t\t\t// and the next step's `minTime` could be used to calculate the update interval:\r\n\t\t\t\t// it will just assume that the label never changes for this step.\r\n\t\t\t\ttimeToNextUpdate = getTimeToNextUpdateForUnit(unit)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (timeToNextUpdate === undefined) {\r\n\t\treturn timeToStepChange\r\n\t}\r\n\r\n\treturn Math.min(timeToNextUpdate, timeToStepChange)\r\n}\r\n\r\nexport function getStepChangesAt(currentOrNextStep, timestamp, { now, future, round, prevStep }) {\r\n\t// The first step's `minTime` is `0` by default.\r\n\t// It doesn't \"change\" steps at zero point\r\n\t// but it does change the wording when switching\r\n\t// from \"future\" to \"past\": \"in ...\" -> \"... ago\".\r\n\t// Therefore, the label should be updated at zero-point too.\r\n\tconst minTime = getStepMinTime(currentOrNextStep, { timestamp, now, future, round, prevStep })\r\n\tif (minTime === undefined) {\r\n\t\treturn\r\n\t}\r\n\tif (future) {\r\n\t\t// The step changes to the previous step\r\n\t\t// as soon as `timestamp - now` becomes\r\n\t\t// less than the `minTime` of the current step:\r\n\t\t// `timestamp - now === minTime - 1`\r\n\t\t// => `now === timestamp - minTime + 1`.\r\n\t\treturn timestamp - minTime * 1000 + 1\r\n\t} else {\r\n\t\t// The step changes to the next step\r\n\t\t// as soon as `now - timestamp` becomes\r\n\t\t// equal to `minTime` of the next step:\r\n\t\t// `now - timestamp === minTime`\r\n\t\t// => `now === timestamp + minTime`.\r\n\r\n\t\t// This is a special case when double-update could be skipped.\r\n\t\tif (minTime === 0 && timestamp === now) {\r\n\t\t\treturn INFINITY\r\n\t\t}\r\n\r\n\t\treturn timestamp + minTime * 1000\r\n\t}\r\n}\r\n\r\nexport function getTimeToStepChange(step, timestamp, {\r\n\tnow,\r\n\tfuture,\r\n\tround,\r\n\tprevStep\r\n}) {\r\n\tif (step) {\r\n\t\tconst stepChangesAt = getStepChangesAt(step, timestamp, {\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround,\r\n\t\t\tprevStep\r\n\t\t})\r\n\t\tif (stepChangesAt === undefined) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn stepChangesAt - now\r\n\t} else {\r\n\t\tif (future) {\r\n\t\t\t// No step.\r\n\t\t\t// Update right after zero point, when it changes from \"future\" to \"past\".\r\n\t\t\treturn timestamp - now + 1\r\n\t\t} else {\r\n\t\t\t// The last step doesn't ever change when `date` is in the past.\r\n\t\t\treturn INFINITY\r\n\t\t}\r\n\t}\r\n}","// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\nexport function addLocaleData(localeData) {\r\n\tif (!localeData) {\r\n\t\tthrow new Error('[javascript-time-ago] No locale data passed.')\r\n\t}\r\n\t// This locale data is stored in a global variable\r\n\t// and later used when calling `.format(time)`.\r\n\tlocalesData[localeData.locale] = localeData\r\n}","// just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// …\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// …\r\n// 3 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\nexport default [\r\n\t{\r\n\t\tformatAs: 'now'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'second'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'minute'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'hour'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'day'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'week'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'month'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'year'\r\n\t}\r\n]","import round from '../steps/round.js'\r\n\r\n// just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// …\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// 4 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\n//\r\nexport default {\r\n\tsteps: round,\r\n\tlabels: 'long'\r\n}","import round from './round.js'\r\n\r\n// just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// …\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// …\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// …\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// 4 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// …\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// …\r\n//\r\nexport default {\r\n\t...round,\r\n\t// Skip \"seconds\".\r\n\tsteps: round.steps.filter(step => step.formatAs !== 'second')\r\n}","import { minute, hour, day, week, month, year } from './units.js'\r\n\r\n// \"factor\" is a legacy property.\r\n// Developers shouldn't need to use it in their custom steps.\r\n\r\n// \"threshold\" is a legacy name of \"min\".\r\n// Developers should use \"min\" property name instead of \"threshold\".\r\n\r\n// \"threshold_for_idOrUnit: value\" is a legacy way of specifying \"min: { id: value }\".\r\n// Developers should use \"min\" property instead of \"threshold\".\r\n\r\n// just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// 5 minutes ago\r\n// 10 minutes ago\r\n// 15 minutes ago\r\n// 20 minutes ago\r\n// …\r\n// 50 minutes ago\r\n// an hour ago\r\n// 2 hours ago\r\n// …\r\n// 20 hours ago\r\n// a day ago\r\n// 2 days ago\r\n// 5 days ago\r\n// a week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// a month ago\r\n// 2 months ago\r\n// 4 months ago\r\n// a year ago\r\n// 2 years ago\r\n// …\r\nexport default [\r\n\t{\r\n\t\t// This step returns the amount of seconds\r\n\t\t// by dividing the amount of seconds by `1`.\r\n\t\tfactor: 1,\r\n    \t// \"now\" labels are used for formatting the output.\r\n\t\tunit: 'now'\r\n\t},\r\n\t{\r\n\t\t// When the language doesn't support `now` unit,\r\n\t\t// the first step is ignored, and it uses this `second` unit.\r\n\t\tthreshold: 1,\r\n\t\t// `threshold_for_now` should be the same as `threshold` on minutes.\r\n\t\tthreshold_for_now: 45.5,\r\n\t\t// This step returns the amount of seconds\r\n\t\t// by dividing the amount of seconds by `1`.\r\n\t\tfactor: 1,\r\n    \t// \"second\" labels are used for formatting the output.\r\n\t\tunit: 'second'\r\n\t},\r\n\t{\r\n\t\t// `threshold` should be the same as `threshold_for_now` on seconds.\r\n\t\tthreshold: 45.5,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a minute.\r\n\t\tfactor: minute,\r\n    \t// \"minute\" labels are used for formatting the output.\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 2.5 minutes.\r\n\t\tthreshold: 2.5 * minute,\r\n\t\t// Allow only 5-minute increments of minutes starting from 2.5 minutes.\r\n\t\t// `granularity` — (advanced) Time interval value \"granularity\".\r\n\t\t// For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n\t\t// when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n\t\t// Perhaps this feature will be removed because there seem to be no use cases\r\n\t\t// of it in the real world.\r\n\t\tgranularity: 5,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a minute.\r\n\t\tfactor: minute,\r\n\t\t// \"minute\" labels are used for formatting the output.\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 22.5 minutes.\r\n\t\tthreshold: 22.5 * minute,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in  half-an-hour.\r\n\t\tfactor: 0.5 * hour,\r\n\t\t// \"half-hour\" labels are used for formatting the output.\r\n\t\t// (if available, which is no longer the case)\r\n\t\tunit: 'half-hour'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 42.5 minutes.\r\n\t\tthreshold: 42.5 * minute,\r\n\t\tthreshold_for_minute: 52.5 * minute,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in an hour.\r\n\t\tfactor: hour,\r\n\t\t// \"hour\" labels are used for formatting the output.\r\n\t\tunit: 'hour'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 20.5 hours.\r\n\t\tthreshold: (20.5 / 24) * day,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a day.\r\n\t\tfactor: day,\r\n\t\t// \"day\" labels are used for formatting the output.\r\n\t\tunit: 'day'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 5.5 days.\r\n\t\tthreshold: 5.5 * day,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a week.\r\n\t\tfactor: week,\r\n\t\t// \"week\" labels are used for formatting the output.\r\n\t\tunit: 'week'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 3.5 weeks.\r\n\t\tthreshold: 3.5 * week,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a month.\r\n\t\tfactor: month,\r\n\t\t// \"month\" labels are used for formatting the output.\r\n\t\tunit: 'month'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 10.5 months.\r\n\t\tthreshold: 10.5 * month,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a year.\r\n\t\tfactor: year,\r\n\t\t// \"year\" labels are used for formatting the output.\r\n\t\tunit: 'year'\r\n\t}\r\n]","import approximate from '../steps/approximate.js'\r\n\r\n// \"gradation\" is a legacy name for \"steps\".\r\n// It's here just for legacy compatibility.\r\n// Use \"steps\" name instead.\r\n\r\n// \"flavour\" is a legacy name for \"labels\".\r\n// It's here just for legacy compatibility.\r\n// Use \"labels\" name instead.\r\n\r\n// \"units\" is a legacy property.\r\n// It's here just for legacy compatibility.\r\n// Developers shouldn't need to use it in their custom styles.\r\n\r\nexport default {\r\n\tgradation: approximate,\r\n\tflavour: 'long',\r\n\tunits: [\r\n\t\t'now',\r\n\t\t'minute',\r\n\t\t'hour',\r\n\t\t'day',\r\n\t\t'week',\r\n\t\t'month',\r\n\t\t'year'\r\n\t]\r\n}","import approximate from '../steps/approximate.js'\r\n\r\n// \"gradation\" is a legacy name for \"steps\".\r\n// It's here just for legacy compatibility.\r\n// Use \"steps\" name instead.\r\n\r\n// \"flavour\" is a legacy name for \"labels\".\r\n// It's here just for legacy compatibility.\r\n// Use \"labels\" name instead.\r\n\r\n// \"units\" is a legacy property.\r\n// It's here just for legacy compatibility.\r\n// Developers shouldn't need to use it in their custom styles.\r\n\r\n// Similar to the default style but with \"ago\" omitted.\r\n//\r\n// just now\r\n// 5 minutes\r\n// 10 minutes\r\n// 15 minutes\r\n// 20 minutes\r\n// an hour\r\n// 2 hours\r\n// …\r\n// 20 hours\r\n// 1 day\r\n// 2 days\r\n// a week\r\n// 2 weeks\r\n// 3 weeks\r\n// a month\r\n// 2 months\r\n// 3 months\r\n// 4 months\r\n// a year\r\n// 2 years\r\n//\r\nexport default {\r\n\tgradation: approximate,\r\n\tflavour: 'long-time',\r\n\tunits: [\r\n\t\t'now',\r\n\t\t'minute',\r\n\t\t'hour',\r\n\t\t'day',\r\n\t\t'week',\r\n\t\t'month',\r\n\t\t'year'\r\n\t]\r\n}","// Looks like this one's deprecated.\r\n// /**\r\n//  * Returns a step corresponding to the unit.\r\n//  * @param  {Object[]} steps\r\n//  * @param  {string} unit\r\n//  * @return {?Object}\r\n//  */\r\n// export function getStepForUnit(steps, unit) {\r\n// \tfor (const step of steps) {\r\n// \t\tif (step.unit === unit) {\r\n// \t\t\treturn step\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n// Looks like this one won't be used in the next major version.\r\n/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn value instanceof Date ? value : new Date(value)\r\n}","import { day, getDate } from '../steps/index.js'\r\nimport { intlDateTimeFormatSupported } from '../locale.js'\r\n\r\n// For compatibility with the old versions of this library.\r\nimport renameLegacyProperties from './renameLegacyProperties.js'\r\n\r\n// Twitter-style relative date/time formatting.\r\n// (\"1m\", \"2h\", \"Mar 3\", \"Apr 4, 2012\").\r\n//\r\n// Seconds, minutes or hours are shown for shorter intervals,\r\n// and longer intervals are formatted using full date format.\r\n\r\nconst steps = [\r\n\t{\r\n\t\tformatAs: 'second'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'minute'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'hour'\r\n\t}\r\n]\r\n\r\n// A cache for `Intl.DateTimeFormat` formatters\r\n// for various locales (is a global variable).\r\nconst formatters = {}\r\n\r\n// Starting from day intervals, output month and day.\r\nconst monthAndDay = {\r\n\tminTime(timestamp, { future, getMinTimeForUnit }) {\r\n\t\t// Returns `23.5 * 60 * 60` when `round` is \"round\",\r\n\t\t// and `24 * 60 * 60` when `round` is \"floor\".\r\n\t\treturn getMinTimeForUnit('day')\r\n\t},\r\n\tformat(value, locale) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (!formatters[locale]) {\r\n\t\t\tformatters[locale] = {}\r\n\t\t}\r\n\t\t/* istanbul ignore else */\r\n\t\tif (!formatters[locale].dayMonth) {\r\n\t\t\t// \"Apr 11\" (MMMd)\r\n\t\t\tformatters[locale].dayMonth = new Intl.DateTimeFormat(locale, {\r\n\t\t\t\tmonth: 'short',\r\n\t\t\t\tday: 'numeric'\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Output month and day.\r\n\t\treturn formatters[locale].dayMonth.format(getDate(value))\r\n\t}\r\n}\r\n\r\n// If the `date` happened/happens outside of current year,\r\n// then output day, month and year.\r\n// The interval should be such that the `date` lies outside of the current year.\r\nconst yearMonthAndDay = {\r\n\tminTime(timestamp, { future }) {\r\n\t\tif (future) {\r\n\t\t\t// January 1, 00:00, of the `date`'s year is right after\r\n\t\t\t// the maximum `now` for formatting a future date:\r\n\t\t\t// When `now` is before that date, the `date` is formatted as \"day/month/year\" (this step),\r\n\t\t\t// When `now` is equal to or after that date, the `date` is formatted as \"day/month\" (another step).\r\n\t\t\t// After that, it's hours, minutes, seconds, and after that it's no longer `future`.\r\n\t\t\t// The date is right after the maximum `now` for formatting a future date,\r\n\t\t\t// so subtract 1 millisecond from it.\r\n\t\t\tconst maxFittingNow = new Date(new Date(timestamp).getFullYear(), 0).getTime() - 1\r\n\t\t\t// Return `minTime` (in seconds).\r\n\t\t\treturn (timestamp - maxFittingNow) / 1000\r\n\t\t} else {\r\n\t\t\t// January 1, 00:00, of the year following the `date`'s year\r\n\t\t\t// is the minimum `now` for formatting a past date:\r\n\t\t\t// When `now` is before that date, the `date` is formatted as \"day/month\" (another step),\r\n\t\t\t// When `now` is equal to or after that date, the `date` is formatted as \"day/month/year\" (this step).\r\n\t\t\t// After that, it's hours, minutes, seconds, and after that it's no longer `future`.\r\n\t\t\tconst minFittingNow = new Date(new Date(timestamp).getFullYear() + 1, 0).getTime()\r\n\t\t\t// Return `minTime` (in seconds).\r\n\t\t\treturn (minFittingNow - timestamp) / 1000\r\n\t\t}\r\n\t},\r\n\tformat(value, locale) {\r\n\t\t/* istanbul ignore if */\r\n\t\tif (!formatters[locale]) {\r\n\t\t\tformatters[locale] = {}\r\n\t\t}\r\n\t\t/* istanbul ignore else */\r\n\t\tif (!formatters[locale].dayMonthYear) {\r\n\t\t\t// \"Apr 11, 2017\" (yMMMd)\r\n\t\t\tformatters[locale].dayMonthYear = new Intl.DateTimeFormat(locale, {\r\n\t\t\t\tyear: 'numeric',\r\n\t\t\t\tmonth: 'short',\r\n\t\t\t\tday: 'numeric'\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Output day, month and year.\r\n\t\treturn formatters[locale].dayMonthYear.format(getDate(value))\r\n\t}\r\n}\r\n\r\n// If `Intl.DateTimeFormat` is supported,\r\n// then longer time intervals will be formatted as dates.\r\n/* istanbul ignore else */\r\nif (intlDateTimeFormatSupported()) {\r\n\tsteps.push(monthAndDay, yearMonthAndDay)\r\n}\r\n// Otherwise, if `Intl.DateTimeFormat` is not supported,\r\n// which could be the case when using Internet Explorer,\r\n// then simply mimick \"round\" steps.\r\nelse {\r\n\tsteps.push(\r\n\t\t{\r\n\t\t\tformatAs: 'day'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'week'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'month'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'year'\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default {\r\n\tsteps,\r\n\tlabels: [\r\n\t\t// \"mini\" labels are only defined for a few languages.\r\n\t\t'mini',\r\n\t\t// \"short-time\" labels are only defined for a few languages.\r\n\t\t'short-time',\r\n\t\t// \"narrow\" and \"short\" labels are defined for all languages.\r\n\t\t// \"narrow\" labels can sometimes be weird (like \"+5d.\"),\r\n\t\t// but \"short\" labels have the \" ago\" part, so \"narrow\" seem\r\n\t\t// more appropriate.\r\n\t\t// \"short\" labels would have been more appropriate if they\r\n\t\t// didn't have the \" ago\" part, hence the \"short-time\" above.\r\n\t\t'narrow',\r\n\t\t// Since \"narrow\" labels are always present, \"short\" element\r\n\t\t// of this array can be removed.\r\n\t\t'short'\r\n\t]\r\n}","import twitter from './twitter.js'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(twitter.steps)\r\n}","import twitter from './twitter.js'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Skip \"seconds\".\r\n\tsteps: twitter.steps.filter(step => step.formatAs !== 'second')\r\n}","import twitterMinute from './twitterMinute.js'\r\n\r\nexport default {\r\n\t...twitterMinute,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(twitterMinute.steps)\r\n}","import { minute } from '../steps/units.js'\r\nimport twitter from './twitter.js'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Skip \"seconds\".\r\n\tsteps: twitter.steps.filter(step => step.formatAs !== 'second')\r\n\t\t// Start showing `1m` from the first minute.\r\n\t\t.map(step => step.formatAs === 'minute' ? { ...step, minTime: minute } : step)\r\n}","export default {\r\n\tsteps: [\r\n\t\t{\r\n\t\t\tformatAs: 'second'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'minute'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'hour'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'day'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'month'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'year'\r\n\t\t}\r\n\t],\r\n\tlabels: [\r\n\t\t// \"mini\" labels are only defined for a few languages.\r\n\t\t'mini',\r\n\t\t// \"short-time\" labels are only defined for a few languages.\r\n\t\t'short-time',\r\n\t\t// \"narrow\" and \"short\" labels are defined for all languages.\r\n\t\t// \"narrow\" labels can sometimes be weird (like \"+5d.\"),\r\n\t\t// but \"short\" labels have the \" ago\" part, so \"narrow\" seem\r\n\t\t// more appropriate.\r\n\t\t// \"short\" labels would have been more appropriate if they\r\n\t\t// didn't have the \" ago\" part, hence the \"short-time\" above.\r\n\t\t'narrow',\r\n\t\t// Since \"narrow\" labels are always present, \"short\" element\r\n\t\t// of this array can be removed.\r\n\t\t'short'\r\n\t]\r\n}","import mini from './mini.js'\r\n\r\nexport default {\r\n\t...mini,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(mini.steps)\r\n}","import mini from './mini.js'\r\n\r\nexport default {\r\n\t...mini,\r\n\t// Skip \"seconds\".\r\n\tsteps: mini.steps.filter(step => step.formatAs !== 'second')\r\n}","import miniMinute from './miniMinute.js'\r\n\r\nexport default {\r\n\t...miniMinute,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(miniMinute.steps)\r\n}","import RelativeTimeFormatPolyfill from 'relative-time-format'\r\n\r\nimport Cache from './cache.js'\r\nimport chooseLocale from './locale.js'\r\nimport isStyleObject from './isStyleObject.js'\r\n\r\nimport getStep from './steps/getStep.js'\r\nimport getStepDenominator from './steps/getStepDenominator.js'\r\nimport getTimeToNextUpdate from './steps/getTimeToNextUpdate.js'\r\n\r\nimport {\r\n\taddLocaleData,\r\n\tgetLocaleData\r\n} from './LocaleDataStore.js'\r\n\r\nimport defaultStyle from './style/roundMinute.js'\r\nimport getStyleByName from './style/getStyleByName.js'\r\n\r\nimport { getRoundFunction } from './round.js'\r\n\r\n// Valid time units.\r\nconst UNITS = [\r\n\t'now',\r\n\t// The rest are the same as in `Intl.RelativeTimeFormat`.\r\n\t'second',\r\n\t'minute',\r\n\t'hour',\r\n\t'day',\r\n\t'week',\r\n\t'month',\r\n\t'quarter',\r\n\t'year'\r\n]\r\n\r\nexport default class TimeAgo {\r\n\t/**\r\n\t * @param {(string|string[])} locales=[] - Preferred locales (or locale).\r\n\t * @param {boolean} [polyfill] — Pass `false` to use native `Intl.RelativeTimeFormat` and `Intl.PluralRules` instead of the polyfills.\r\n\t */\r\n\tconstructor(locales = [], { polyfill } = {}) {\r\n\t\t// Convert `locales` to an array.\r\n\t\tif (typeof locales === 'string') {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\r\n\t\t// Choose the most appropriate locale\r\n\t\t// from the list of `locales` added by the user.\r\n\t\t// For example, new TimeAgo(\"en-US\") -> \"en\".\r\n\t\tthis.locale = chooseLocale(\r\n\t\t\tlocales.concat(TimeAgo.getDefaultLocale()),\r\n\t\t\tgetLocaleData\r\n\t\t)\r\n\r\n\t\tif (typeof Intl !== 'undefined') {\r\n\t\t\t// Use `Intl.NumberFormat` for formatting numbers (when available).\r\n\t\t\tif (Intl.NumberFormat) {\r\n\t\t\t\tthis.numberFormat = new Intl.NumberFormat(this.locale)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Some people have requested the ability to use native\r\n\t\t// `Intl.RelativeTimeFormat` and `Intl.PluralRules`\r\n\t\t// instead of the polyfills.\r\n\t\t// https://github.com/catamphetamine/javascript-time-ago/issues/21\r\n\t\tif (polyfill === false) {\r\n\t\t\tthis.IntlRelativeTimeFormat = Intl.RelativeTimeFormat\r\n\t\t\tthis.IntlPluralRules = Intl.PluralRules\r\n\t\t} else {\r\n\t\t\tthis.IntlRelativeTimeFormat = RelativeTimeFormatPolyfill\r\n\t\t\tthis.IntlPluralRules = RelativeTimeFormatPolyfill.PluralRules\r\n\t\t}\r\n\r\n\t\t// Cache `Intl.RelativeTimeFormat` instance.\r\n\t\tthis.relativeTimeFormatCache = new Cache()\r\n\r\n\t\t// Cache `Intl.PluralRules` instance.\r\n\t\tthis.pluralRulesCache = new Cache()\r\n\t}\r\n\r\n\t/**\r\n\t * Formats relative date/time.\r\n\t *\r\n\t * @param {(number|Date)} input — A `Date` or a javascript timestamp.\r\n\t *\r\n\t * @param {(string|object)} style — Date/time formatting style. Either one of the built-in style names or a \"custom\" style definition object having `steps: object[]` and `labels: string[]`.\r\n\t *\r\n\t * @param {number} [options.now] - Sets the current date timestamp.\r\n\t *\r\n\t * @param  {boolean} [options.future] — Tells how to format value `0`:\r\n\t *         as \"future\" (`true`) or \"past\" (`false`).\r\n\t *         Is `false` by default, but should have been `true` actually,\r\n\t *         in order to correspond to `Intl.RelativeTimeFormat`\r\n\t *         that uses `future` formatting for `0` unless `-0` is passed.\r\n\t *\r\n\t * @param {string} [options.round] — Rounding method. Overrides the style's one.\r\n\t *\r\n\t * @param {boolean} [options.getTimeToNextUpdate] — Pass `true` to return `[formattedDate, timeToNextUpdate]` instead of just `formattedDate`.\r\n\t *\r\n\t * @return {string} The formatted relative date/time. If no eligible `step` is found, then an empty string is returned.\r\n\t */\r\n\tformat(input, style, options) {\r\n\t\tif (!options) {\r\n\t\t\tif (style && !isStyle(style)) {\r\n\t\t\t\toptions = style\r\n\t\t\t\tstyle = undefined\r\n\t\t\t} else {\r\n\t\t\t\toptions = {}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!style) {\r\n\t\t\tstyle = defaultStyle\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tstyle = getStyleByName(style)\r\n\t\t}\r\n\r\n\t\tconst timestamp = getTimestamp(input)\r\n\r\n\t\t// Get locale messages for this type of labels.\r\n\t\t// \"flavour\" is a legacy name for \"labels\".\r\n\t\tconst { labels, labelsType } = this.getLabels(style.flavour || style.labels)\r\n\r\n\t\tlet now\r\n\t\t// Can pass a custom `now`, e.g. for testing purposes.\r\n\t\t//\r\n\t\t// Legacy way was passing `now` in `style`.\r\n\t\t// That way is deprecated.\r\n\t\tif (style.now !== undefined) {\r\n\t\t\tnow = style.now\r\n\t\t}\r\n\t\t// The new way is passing `now` option to `.format()`.\r\n\t\tif (now === undefined && options.now !== undefined) {\r\n\t\t\tnow = options.now\r\n\t\t}\r\n\t\tif (now === undefined) {\r\n\t\t\tnow = Date.now()\r\n\t\t}\r\n\r\n\t\t// how much time has passed (in seconds)\r\n\t\tconst secondsPassed = (now - timestamp) / 1000 // in seconds\r\n\r\n\t\tconst future = options.future || secondsPassed < 0\r\n\r\n\t\tconst nowLabel = getNowLabel(\r\n\t\t\tlabels,\r\n\t\t\tgetLocaleData(this.locale).now,\r\n\t\t\tgetLocaleData(this.locale).long,\r\n\t\t\tfuture\r\n\t\t)\r\n\r\n\t\t// `custom` – A function of `{ elapsed, time, date, now, locale }`.\r\n\t\t//\r\n\t\t// Looks like `custom` function is deprecated and will be removed\r\n\t\t// in the next major version.\r\n\t\t//\r\n\t\t// If this function returns a value, then the `.format()` call will return that value.\r\n\t\t// Otherwise the relative date/time is formatted as usual.\r\n\t\t// This feature is currently not used anywhere and is here\r\n\t\t// just for providing the ultimate customization point\r\n\t\t// in case anyone would ever need that. Prefer using\r\n\t\t// `steps[step].format(value, locale)` instead.\r\n\t\t//\r\n\t\tif (style.custom) {\r\n\t\t\tconst custom = style.custom({\r\n\t\t\t\tnow,\r\n\t\t\t\tdate: new Date(timestamp),\r\n\t\t\t\ttime: timestamp,\r\n\t\t\t\telapsed: secondsPassed,\r\n\t\t\t\tlocale: this.locale\r\n\t\t\t})\r\n\t\t\tif (custom !== undefined) {\r\n\t\t\t\t// Won't return `timeToNextUpdate` here\r\n\t\t\t\t// because `custom()` seems deprecated.\r\n\t\t\t\treturn custom\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get the list of available time interval units.\r\n\t\tconst units = getTimeIntervalMeasurementUnits(\r\n\t\t\t// Controlling `style.steps` through `style.units` seems to be deprecated:\r\n\t\t\t// create a new custom `style` instead.\r\n\t\t\tstyle.units,\r\n\t\t\tlabels,\r\n\t\t\tnowLabel\r\n\t\t)\r\n\r\n\t\t// // If no available time unit is suitable, just output an empty string.\r\n\t\t// if (units.length === 0) {\r\n\t\t// \tconsole.error(`None of the \"${units.join(', ')}\" time units have been found in \"${labelsType}\" labels for \"${this.locale}\" locale.`)\r\n\t\t// \treturn ''\r\n\t\t// }\r\n\r\n\t\tconst round = options.round || style.round\r\n\r\n\t\t// Choose the appropriate time measurement unit\r\n\t\t// and get the corresponding rounded time amount.\r\n\t\tconst [prevStep, step, nextStep] = getStep(\r\n\t\t\t// \"gradation\" is a legacy name for \"steps\".\r\n\t\t\t// For historical reasons, \"approximate\" steps are used by default.\r\n\t\t\t// In the next major version, there'll be no default for `steps`.\r\n\t\t\tstyle.gradation || style.steps || defaultStyle.steps,\r\n\t\t\tsecondsPassed,\r\n\t\t\t{ now, units, round, future, getNextStep: true }\r\n\t\t)\r\n\r\n\t\tconst formattedDate = this.formatDateForStep(timestamp, step, secondsPassed, {\r\n\t\t\tlabels,\r\n\t\t\tlabelsType,\r\n\t\t\tnowLabel,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t}) || ''\r\n\r\n\t\tif (options.getTimeToNextUpdate) {\r\n\t\t\tconst timeToNextUpdate = getTimeToNextUpdate(timestamp, step, {\r\n\t\t\t\tnextStep,\r\n\t\t\t\tprevStep,\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture,\r\n\t\t\t\tround\r\n\t\t\t})\r\n\t\t\treturn [formattedDate, timeToNextUpdate]\r\n\t\t}\r\n\r\n\t\treturn formattedDate\r\n\t}\r\n\r\n\tformatDateForStep(timestamp, step, secondsPassed, {\r\n\t\tlabels,\r\n\t\tlabelsType,\r\n\t\tnowLabel,\r\n\t\tnow,\r\n\t\tfuture,\r\n\t\tround\r\n\t}) {\r\n\t\t// If no step matches, then output an empty string.\r\n\t\tif (!step) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (step.format) {\r\n\t\t\treturn step.format(timestamp, this.locale, {\r\n\t\t\t\tformatAs: (unit, value) => {\r\n\t\t\t\t\t// Mimicks `Intl.RelativeTimeFormat.format()`.\r\n\t\t\t\t\treturn this.formatValue(value, unit, {\r\n\t\t\t\t\t\tlabels,\r\n\t\t\t\t\t\tfuture\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// \"unit\" is now called \"formatAs\".\r\n\t\tconst unit = step.unit || step.formatAs\r\n\r\n\t\tif (!unit) {\r\n\t\t\tthrow new Error(`[javascript-time-ago] Each step must define either \\`formatAs\\` or \\`format()\\`. Step: ${JSON.stringify(step)}`)\r\n\t\t}\r\n\r\n\t\t// `Intl.RelativeTimeFormat` doesn't operate in \"now\" units.\r\n\t\t// Therefore, threat \"now\" as a special case.\r\n\t\tif (unit === 'now') {\r\n\t\t\treturn nowLabel\r\n\t\t}\r\n\r\n\t\t// Amount in units.\r\n\t\tlet amount = Math.abs(secondsPassed) / getStepDenominator(step)\r\n\r\n\t\t// Apply granularity to the time amount\r\n\t\t// (and fallback to the previous step\r\n\t\t//  if the first level of granularity\r\n\t\t//  isn't met by this amount)\r\n\t\t//\r\n\t\t// `granularity` — (advanced) Time interval value \"granularity\".\r\n\t\t// For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n\t\t// when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n\t\t// Perhaps this feature will be removed because there seem to be no use cases\r\n\t\t// of it in the real world.\r\n\t\t//\r\n\t\tif (step.granularity) {\r\n\t\t\t// Recalculate the amount of seconds passed based on granularity\r\n\t\t\tamount = getRoundFunction(round)(amount / step.granularity) * step.granularity\r\n\t\t}\r\n\r\n\t\tlet valueForFormatting = -1 * Math.sign(secondsPassed) * getRoundFunction(round)(amount)\r\n\r\n\t\t// By default, this library formats a `0` in \"past\" mode,\r\n\t\t// unless `future: true` option is passed.\r\n\t\t// This is different to `relative-time-format`'s behavior\r\n\t\t// which formats a `0` in \"future\" mode by default, unless it's a `-0`.\r\n\t\t// So, convert `0` to `-0` if `future: true` option wasn't passed.\r\n\t\t// `=== 0` matches both `0` and `-0`.\r\n\t\tif (valueForFormatting === 0) {\r\n\t\t\tif (future) {\r\n\t\t\t\tvalueForFormatting = 0\r\n\t\t\t} else {\r\n\t\t\t\tvalueForFormatting = -0\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (labelsType) {\r\n\t\t\tcase 'long':\r\n\t\t\tcase 'short':\r\n\t\t\tcase 'narrow':\r\n\t\t\t\t// Format the amount using `Intl.RelativeTimeFormat`.\r\n\t\t\t\treturn this.getFormatter(labelsType).format(valueForFormatting, unit)\r\n\t\t\tdefault:\r\n\t\t\t\t// Format the amount.\r\n\t\t\t\t// (mimicks `Intl.RelativeTimeFormat` behavior for other time label styles)\r\n\t\t\t\treturn this.formatValue(valueForFormatting, unit, {\r\n\t\t\t\t\tlabels,\r\n\t\t\t\t\tfuture\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Mimicks what `Intl.RelativeTimeFormat` does for additional locale styles.\r\n\t * @param  {number} value\r\n\t * @param  {string} unit\r\n\t * @param  {object} options.labels — Relative time labels.\r\n\t * @param  {boolean} [options.future] — Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default, but should have been `true` actually.\r\n\t * @return {string}\r\n\t */\r\n\tformatValue(value, unit, { labels, future }) {\r\n\t\treturn this.getFormattingRule(labels, unit, value, { future })\r\n\t\t\t.replace('{0}', this.formatNumber(Math.abs(value)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns formatting rule for `value` in `units` (either in past or in future).\r\n\t * @param {object} formattingRules — Relative time labels for different units.\r\n\t * @param {string} unit - Time interval measurement unit.\r\n\t * @param {number} value - Time interval value.\r\n\t * @param  {boolean} [options.future] — Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default.\r\n\t * @return {string}\r\n\t * @example\r\n\t * // Returns \"{0} days ago\"\r\n\t * getFormattingRule(en.long, \"day\", -2, 'en')\r\n\t */\r\n\tgetFormattingRule(formattingRules, unit, value, { future }) {\r\n\t\t// Passing the language is required in order to\r\n\t\t// be able to correctly classify the `value` as a number.\r\n\t\tconst locale = this.locale\r\n\t\tformattingRules = formattingRules[unit]\r\n\t\t// Check for a special \"compacted\" rules case:\r\n\t\t// if formatting rules are the same for \"past\" and \"future\",\r\n\t\t// and also for all possible `value`s, then those rules are\r\n\t\t// stored as a single string.\r\n\t\tif (typeof formattingRules === 'string') {\r\n\t\t\treturn formattingRules\r\n\t\t}\r\n\t\t// Choose either \"past\" or \"future\" based on time `value` sign.\r\n\t\t// If \"past\" is same as \"future\" then they're stored as \"other\".\r\n\t\t// If there's only \"other\" then it's being collapsed.\r\n\t\tconst pastOrFuture = value === 0 ? (future ? 'future' : 'past') : (value < 0 ? 'past' : 'future')\r\n\t\tconst quantifierRules = formattingRules[pastOrFuture] || formattingRules\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof quantifierRules === 'string') {\r\n\t\t\treturn quantifierRules\r\n\t\t}\r\n\t\t// Quantify `value`.\r\n\t\tconst quantifier = this.getPluralRules().select(Math.abs(value))\r\n\t\t// \"other\" rule is supposed to always be present.\r\n\t\t// If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n\t\treturn quantifierRules[quantifier] || quantifierRules.other\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a number into a string.\r\n\t * Uses `Intl.NumberFormat` when available.\r\n\t * @param  {number} number\r\n\t * @return {string}\r\n\t */\r\n\tformatNumber(number) {\r\n\t\treturn this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.RelativeTimeFormat` for a given `labelsType`.\r\n\t * @param {string} labelsType\r\n\t * @return {object} `Intl.RelativeTimeFormat` instance\r\n\t */\r\n\tgetFormatter(labelsType) {\r\n\t\t// `Intl.RelativeTimeFormat` instance creation is (hypothetically) assumed\r\n\t\t// a lengthy operation so the instances are cached and reused.\r\n\t\treturn this.relativeTimeFormatCache.get(this.locale, labelsType) ||\r\n\t\t\tthis.relativeTimeFormatCache.put(this.locale, labelsType, new this.IntlRelativeTimeFormat(this.locale, { style: labelsType }))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.PluralRules` instance.\r\n\t * @return {object} `Intl.PluralRules` instance\r\n\t */\r\n\tgetPluralRules() {\r\n\t\t// `Intl.PluralRules` instance creation is (hypothetically) assumed\r\n\t\t// a lengthy operation so the instances are cached and reused.\r\n\t\treturn this.pluralRulesCache.get(this.locale) ||\r\n\t\t\tthis.pluralRulesCache.put(this.locale, new this.IntlPluralRules(this.locale))\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets localized labels for this type of labels.\r\n\t *\r\n\t * @param {(string|string[])} labelsType - Relative date/time labels type.\r\n\t *                                     If it's an array then all label types are tried\r\n\t *                                     until a suitable one is found.\r\n\t *\r\n\t * @returns {Object} Returns an object of shape { labelsType, labels }\r\n\t */\r\n\tgetLabels(labelsType = []) {\r\n\t\t// Convert `labels` to an array.\r\n\t\tif (typeof labelsType === 'string') {\r\n\t\t\tlabelsType = [labelsType]\r\n\t\t}\r\n\r\n\t\t// Supports legacy \"tiny\" and \"mini-time\" label styles.\r\n\t\tlabelsType = labelsType.map((labelsType) => {\r\n\t\t\tswitch (labelsType) {\r\n\t\t\t\tcase 'tiny':\r\n\t\t\t\tcase 'mini-time':\r\n\t\t\t\t\treturn 'mini'\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn labelsType\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// \"long\" labels type is the default one.\r\n\t\t// (it's always present for all languages)\r\n\t\tlabelsType = labelsType.concat('long')\r\n\r\n\t\t// Find a suitable labels type.\r\n\t\tconst localeData = getLocaleData(this.locale)\r\n\t\tfor (const _labelsType of labelsType) {\r\n\t\t\tif (localeData[_labelsType]) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabelsType: _labelsType,\r\n\t\t\t\t\tlabels: localeData[_labelsType]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Default locale global variable.\r\n */\r\nlet defaultLocale = 'en'\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nTimeAgo.getDefaultLocale = () => defaultLocale\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nTimeAgo.setDefaultLocale = (locale) => defaultLocale = locale\r\n\r\n/**\r\n * Adds locale data for a specific locale and marks the locale as default.\r\n * @param {Object} localeData\r\n */\r\nTimeAgo.addDefaultLocale = function(localeData) {\r\n\tif (defaultLocaleHasBeenSpecified) {\r\n\t\treturn console.error('[javascript-time-ago] `TimeAgo.addDefaultLocale()` can only be called once. To add other locales, use `TimeAgo.addLocale()`.')\r\n\t}\r\n\tdefaultLocaleHasBeenSpecified = true\r\n\tTimeAgo.setDefaultLocale(localeData.locale)\r\n\tTimeAgo.addLocale(localeData)\r\n}\r\n\r\nlet defaultLocaleHasBeenSpecified\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nTimeAgo.addLocale = function(localeData) {\r\n\taddLocaleData(localeData)\r\n\tRelativeTimeFormatPolyfill.addLocale(localeData)\r\n}\r\n\r\n/**\r\n * (legacy alias)\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n * @deprecated\r\n */\r\nTimeAgo.locale = TimeAgo.addLocale\r\n\r\n/**\r\n * Adds custom labels to locale data.\r\n * @param {string} locale\r\n * @param {string} name\r\n * @param {object} labels\r\n */\r\nTimeAgo.addLabels = (locale, name, labels) => {\r\n\tlet localeData = getLocaleData(locale)\r\n\tif (!localeData) {\r\n\t\taddLocaleData({\r\n\t\t\tlocale\r\n\t\t})\r\n\t\tlocaleData = getLocaleData(locale)\r\n\t\t// throw new Error(`[javascript-time-ago] No data for locale \"${locale}\"`)\r\n\t}\r\n\tlocaleData[name] = labels\r\n}\r\n\r\n// Normalizes `.format()` `time` argument.\r\nfunction getTimestamp(input) {\r\n\tif (input.constructor === Date || isMockedDate(input)) {\r\n\t\treturn input.getTime()\r\n\t}\r\n\r\n\tif (typeof input === 'number') {\r\n\t\treturn input\r\n\t}\r\n\r\n\t// For some weird reason istanbul doesn't see this `throw` covered.\r\n\t/* istanbul ignore next */\r\n\tthrow new Error(`Unsupported relative time formatter input: ${typeof input}, ${input}`)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nfunction isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}\r\n\r\n// Get available time interval measurement units.\r\nfunction getTimeIntervalMeasurementUnits(allowedUnits, labels, nowLabel) {\r\n\t// Get all time interval measurement units that're available\r\n\t// in locale data for a given time labels style.\r\n\tlet units = Object.keys(labels)\r\n\r\n\t// `now` unit is handled separately and is shipped in its own `now.json` file.\r\n\t// `now.json` isn't present for all locales, so it could be substituted with\r\n\t// \".second.current\".\r\n\t// Add `now` unit if it's available in locale data.\r\n\tif (nowLabel) {\r\n\t\tunits.push('now')\r\n\t}\r\n\r\n\t// If only a specific set of available time measurement units can be used\r\n\t// then only those units are allowed (if they're present in locale data).\r\n\tif (allowedUnits) {\r\n\t\tunits = allowedUnits.filter(unit => unit === 'now' || units.indexOf(unit) >= 0)\r\n\t}\r\n\r\n\treturn units\r\n}\r\n\r\nfunction getNowLabel(labels, nowLabels, longLabels, future) {\r\n\tconst nowLabel = labels.now || (nowLabels && nowLabels.now)\r\n\t// Specific \"now\" message form extended locale data (if present).\r\n\tif (nowLabel) {\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof nowLabel === 'string') {\r\n\t\t\treturn nowLabel\r\n\t\t}\r\n\t\t// Not handling `value === 0` as `localeData.now.current` here\r\n\t\t// because it wouldn't make sense: \"now\" is a moment,\r\n\t\t// so one can't possibly differentiate between a\r\n\t\t// \"previous\" moment, a \"current\" moment and a \"next moment\".\r\n\t\t// It can only be differentiated between \"past\" and \"future\".\r\n\t\tif (future) {\r\n\t\t\treturn nowLabel.future\r\n\t\t} else {\r\n\t\t\treturn nowLabel.past\r\n\t\t}\r\n\t}\r\n\t// Use \".second.current\" as \"now\" message.\r\n\tif (longLabels && longLabels.second && longLabels.second.current) {\r\n\t\treturn longLabels.second.current\r\n\t}\r\n}\r\n\r\nfunction isStyle(variable) {\r\n\treturn typeof variable === 'string' || isStyleObject(variable)\r\n}","import round from './round.js'\r\nimport roundMinute from './roundMinute.js'\r\n// `approximate` style is deprecated.\r\nimport approximate from './approximate.js'\r\n// `approximateTime` style is deprecated.\r\nimport approximateTime from './approximateTime.js'\r\nimport twitter from './twitter.js'\r\nimport twitterNow from './twitterNow.js'\r\nimport twitterMinute from './twitterMinute.js'\r\nimport twitterMinuteNow from './twitterMinuteNow.js'\r\nimport twitterFirstMinute from './twitterFirstMinute.js'\r\nimport mini from './mini.js'\r\nimport miniNow from './miniNow.js'\r\nimport miniMinute from './miniMinute.js'\r\nimport miniMinuteNow from './miniMinuteNow.js'\r\n\r\nexport default function getStyleByName(style) {\r\n\tswitch (style) {\r\n\t\t// \"default\" style name is deprecated.\r\n\t\tcase 'default':\r\n\t\tcase 'round':\r\n\t\t\treturn round\r\n\t\tcase 'round-minute':\r\n\t\t\treturn roundMinute\r\n\t\tcase 'approximate':\r\n\t\t\treturn approximate\r\n\t\t// \"time\" style name is deprecated.\r\n\t\tcase 'time':\r\n\t\tcase 'approximate-time':\r\n\t\t\treturn approximateTime\r\n\t\tcase 'mini':\r\n\t\t\treturn mini\r\n\t\tcase 'mini-now':\r\n\t\t\treturn miniNow\r\n\t\tcase 'mini-minute':\r\n\t\t\treturn miniMinute\r\n\t\tcase 'mini-minute-now':\r\n\t\t\treturn miniMinuteNow\r\n\t\tcase 'twitter':\r\n\t\t\treturn twitter\r\n\t\tcase 'twitter-now':\r\n\t\t\treturn twitterNow\r\n\t\tcase 'twitter-minute':\r\n\t\t\treturn twitterMinute\r\n\t\tcase 'twitter-minute-now':\r\n\t\t\treturn twitterMinuteNow\r\n\t\tcase 'twitter-first-minute':\r\n\t\t\treturn twitterFirstMinute\r\n\t\tdefault:\r\n\t\t\t// For historical reasons, the default style is \"approximate\".\r\n\t\t\treturn approximate\r\n\t}\r\n}","import React, { useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Time({\r\n\tdate,\r\n\tverboseDate,\r\n\ttooltip,\r\n\tchildren,\r\n\t...rest\r\n}, ref) {\r\n\tconst isoString = useMemo(() => date.toISOString(), [date])\r\n\treturn (\r\n\t\t<time\r\n\t\t\tref={ref}\r\n\t\t\t{...rest}\r\n\t\t\tdateTime={isoString}\r\n\t\t\ttitle={tooltip ? verboseDate : undefined}>\r\n\t\t\t{children}\r\n\t\t</time>\r\n\t)\r\n}\r\n\r\n// https://gitlab.com/catamphetamine/react-time-ago/-/issues/5\r\n//\r\n// Someone used this component with \"Material UI\"'s `<Tooltip/>` component,\r\n// and that component required `children` be `ref`-able.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-material/src/Tooltip/Tooltip.js#L494-L496\r\n// \r\n// That component seems to only be using that `ref-`ability to check whether \r\n// the `children` element qualifies for `:focus-visible` selector.\r\n// https://github.com/mui-org/material-ui/blob/a9903917f919092f80d84075f39fb51d51f241f2/packages/mui-utils/src/useIsFocusVisible.ts#L105\r\n//\r\nTime = React.forwardRef(Time)\r\n\r\nTime.propTypes = {\r\n\tdate: PropTypes.instanceOf(Date).isRequired,\r\n\tverboseDate: PropTypes.string,\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.string.isRequired\r\n}","/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}\r\n","/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tconstructor() {\r\n\t\tthis.cache = {}\r\n\t}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}","import memoize from 'memoize-one'\r\n\r\nimport {\r\n\tintlDateTimeFormatSupported,\r\n\tintlDateTimeFormatSupportedLocale\r\n} from './locale.js'\r\n\r\nimport Cache from './cache.js'\r\n\r\nconst cache = new Cache()\r\n\r\nconst INTL_DATE_TIME_FORMAT_SUPPORTED = intlDateTimeFormatSupported()\r\nconst FALLBACK_VERBOSE_DATE_FORMATTER = date => date.toString()\r\n\r\n/**\r\n * Returns a verbose date formatter.\r\n * \r\n * @param {string} locale - Date formatting locale\r\n * @param {object} format - Output format\r\n * @param {string} format.day     - Day format\r\n * @param {string} format.month   - Month format\r\n * @param {string} format.year    - Year format\r\n * @param {string} format.weekday - Weekday format\r\n * @param {string} format.hour    - Hour format\r\n * @param {string} format.minute  - Minute format\r\n * @param {string} format.second  - Second format\r\n *\r\n * @returns {Function} `(date) -> string`.\r\n */\r\nfunction getVerboseDateFormatter(locales, format) {\r\n\t// Fall back to `date.toString()` for old web browsers.\r\n\t// https://caniuse.com/#search=intl\r\n\tif (!INTL_DATE_TIME_FORMAT_SUPPORTED) {\r\n\t\treturn FALLBACK_VERBOSE_DATE_FORMATTER\r\n\t}\r\n\r\n\t// If none of the `locales` are supported\r\n\t// a default system locale will be used.\r\n\tconst locale = resolveLocale(locales)\r\n\r\n\t// `Intl.DateTimeFormat` format caching key.\r\n\t// E.g. `\"{\"day\":\"numeric\",\"month\":\"short\",...}\"`.\r\n\t// Didn't benchmark what's faster:\r\n\t// creating a new `Intl.DateTimeFormat` instance\r\n\t// or stringifying a small JSON `format`.\r\n\t// Perhaps strigifying JSON `format` is faster.\r\n\tconst formatFingerprint = JSON.stringify(format)\r\n\r\n\t// Get `Intl.DateTimeFormat` instance for these `locale` and `format`.\r\n\t// (`locale` can be `undefined`, hence the `String(locale)` conversion)\r\n\tconst formatter = cache.get(String(locale), formatFingerprint) ||\r\n\t\tcache.put(String(locale), formatFingerprint, new Intl.DateTimeFormat(locale, format))\r\n\r\n\t// Return date formatter\r\n\treturn date => formatter.format(date)\r\n}\r\n\r\n// Even though `getVerboseDateFormatter()` function is called inside a\r\n// `useMemo()` hook, it's still invoked every time for different \r\n// `<ReactTimeAgo/>` elements on a page. There could be a lot of such\r\n// `<ReactTimeAgo/>` elements on a page. And `useMemo()` wouldn't speed up\r\n// the initial render. To work around that, simple argument-based memoization\r\n// is used.\r\nexport default memoize(getVerboseDateFormatter)\r\n\r\n// Caching locale resolving for optimizing pages \r\n// with a lot of `<ReactTimeAgo/>` elements (say, 100 or more).\r\n// `Intl.DateTimeFormat.supportedLocalesOf(locales)` is not instantaneous.\r\n// For example, it could be 25 milliseconds for 200 calls.\r\nconst resolvedLocales = {}\r\n\r\n/**\r\n * Resolves a list of possible locales to a single (\"best fit\") supported locale.\r\n * @param  {string[]} locales\r\n * @return {string}\r\n */\r\nfunction resolveLocale(locales) {\r\n\tconst localesFingerprint = locales.toString()\r\n\tif (resolvedLocales[localesFingerprint]) {\r\n\t\treturn resolvedLocales[localesFingerprint] \r\n\t}\r\n\treturn resolvedLocales[localesFingerprint] = intlDateTimeFormatSupportedLocale(locales)\r\n}","/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn isDate(value) ? value : new Date(value)\r\n}\r\n\r\n/**\r\n * Converts value to a timestamp.\r\n * @param {(number|Date)} value\r\n * @return {number}\r\n */\r\nexport function getTime(value) {\r\n\treturn isDate(value) ? value.getTime() : value\r\n}\r\n\r\nfunction isDate(object) {\r\n\treturn object instanceof Date || isMockedDate(object)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nexport function isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}","import TimeAgo from 'javascript-time-ago'\r\n\r\nimport Cache from './cache.js'\r\n\r\nconst TimeAgoCache = new Cache()\r\nexport default function getTimeAgo(preferredLocales, { polyfill }) {\r\n\t// `TimeAgo` instance creation is (hypothetically) assumed\r\n\t// a lengthy operation so the instances are cached and reused.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/1\r\n\tconst key = String(preferredLocales) + ':' + String(polyfill)\r\n\treturn TimeAgoCache.get(key) ||\r\n\t\tTimeAgoCache.put(key, new TimeAgo(preferredLocales, { polyfill }))\r\n}","// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch.js'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}","// \"Binary\" search in a sorted array.\r\nexport default function (array, test) {\r\n\tif (array.length === 0) {\r\n\t\treturn 0\r\n\t}\r\n\r\n\tlet min = 0\r\n\tlet max = array.length - 1\r\n\tlet guess\r\n\r\n\twhile (min <= max) {\r\n\t\tguess = Math.floor((max + min) / 2)\r\n\r\n\t\tconst result = test(array[guess])\r\n\t\tif (result === 0) {\r\n\t\t\treturn guess\r\n\t\t}\r\n\t\telse if (result < 0) {\r\n\t\t\tmin = guess + 1\r\n\t\t\tif (min > max) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmax = guess - 1\r\n\t\t\tif (max < min) {\r\n\t\t\t\treturn min\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// return -1\r\n\t// return min\r\n}","import { useEffect, useState, useRef, useCallback, useMemo } from 'react'\r\nimport TimeAgo from 'javascript-time-ago'\r\n\r\nimport getVerboseDateFormatter from './helpers/getVerboseDateFormatter.js'\r\nimport { getDate } from './helpers/date.js'\r\nimport getTimeAgo from './helpers/getTimeAgo.js'\r\n\r\nimport Updater from './Updater.js'\r\n\r\nexport default function useTimeAgo({\r\n\t// `date: Date` or `timestamp: number`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate,\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`.\r\n\tformatVerboseDate,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat = DEFAULT_VERBOSE_DATE_FORMAT,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// When not provided, will use `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles to determine the update interval.\r\n\tupdateInterval,\r\n\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns auto-update off, so this parameter is deprecated.\r\n\ttick = true,\r\n\r\n\t// \"Now\" timestamp.\r\n\t// E.g. `Date.now()`.\r\n\tnow: nowProperty,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset = 0,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\t// The default value is `true` meaning that it uses polyfills for\r\n\t// `Intl.RelativeTimeFormat` / `Intl.PluralRules` (polyfills are from `javascript-time-ago`).\r\n\tpolyfill\r\n}) {\r\n\t// Get the list of preferred locales.\r\n\tconst preferredLocales = useMemo(() => {\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale]\r\n\t\t}\r\n\t\t// Add `javascript-time-ago` default locale.\r\n\t\treturn locales.concat(TimeAgo.getDefaultLocale())\r\n\t}, [\r\n\t\tlocale,\r\n\t\tlocales\r\n\t])\r\n\r\n\t// Create `javascript-time-ago` formatter instance.\r\n\tconst timeAgo = useMemo(() => {\r\n\t\treturn getTimeAgo(preferredLocales, { polyfill })\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tpolyfill\r\n\t])\r\n\r\n\t// The date or timestamp that was passed.\r\n\t// Convert timestamp to `Date`.\r\n\tdate = useMemo(() => getDate(date), [date])\r\n\r\n\t// Formats the `date`.\r\n\tconst formatDate = useCallback(() => {\r\n\t\tlet now = (nowProperty || Date.now()) - timeOffset\r\n\t\tlet stopUpdates\r\n\t\tif (future) {\r\n\t\t\tif (now >= date.getTime()) {\r\n\t\t\t\tnow = date.getTime()\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (minTimeLeft !== undefined) {\r\n\t\t\tconst maxNow = date.getTime() - minTimeLeft * 1000\r\n\t\t\tif (now > maxNow) {\r\n\t\t\t\tnow = maxNow\r\n\t\t\t\tstopUpdates = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet [formattedDate, timeToNextUpdate] = timeAgo.format(date, timeStyle, {\r\n\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t})\r\n\t\tif (stopUpdates) {\r\n\t\t\ttimeToNextUpdate = INFINITY\r\n\t\t} else {\r\n\t\t\t// Legacy compatibility: there used to be an `updateInterval` property.\r\n\t\t\t// That was before `getTimeToNextUpdate` feature was introduced in `javascript-time-ago`.\r\n\t\t\t// A default interval of one minute is introduced because\r\n\t\t\t// `getTimeToNextUpdate` feature may theoretically return `undefined`.\r\n\t\t\ttimeToNextUpdate = updateInterval || timeToNextUpdate || 60 * 1000 // A minute by default.\r\n\t\t}\r\n\t\treturn [formattedDate, now + timeToNextUpdate]\r\n\t}, [\r\n\t\tdate,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tupdateInterval,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\ttimeAgo,\r\n\t\tnowProperty\r\n\t])\r\n\r\n\tconst formatDateRef = useRef()\r\n\tformatDateRef.current = formatDate\r\n\r\n\tconst [_formattedDate, _nextUpdateTime] = useMemo(formatDate, [])\r\n\tconst [formattedDate, setFormattedDate] = useState(_formattedDate)\r\n\r\n\tconst updater = useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tick) {\r\n\t\t\tupdater.current = Updater.add({\r\n\t\t\t\tgetNextValue: () => formatDateRef.current(),\r\n\t\t\t\tsetValue: setFormattedDate,\r\n\t\t\t\tnextUpdateTime: _nextUpdateTime\r\n\t\t\t})\r\n\t\t\treturn () => updater.current.stop()\r\n\t\t}\r\n\t}, [tick])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (updater.current) {\r\n\t\t\tupdater.current.forceUpdate()\r\n\t\t} else {\r\n\t\t\tconst [formattedDate] = formatDate()\r\n\t\t\tsetFormattedDate(formattedDate)\r\n\t\t}\r\n\t}, [formatDate])\r\n\r\n\t// Create verbose date formatter for the tooltip text.\r\n\tconst verboseDateFormatter = useMemo(() => {\r\n\t\treturn getVerboseDateFormatter(\r\n\t\t\tpreferredLocales, \r\n\t\t\tverboseDateFormat\r\n\t\t)\r\n\t}, [\r\n\t\tpreferredLocales,\r\n\t\tverboseDateFormat\r\n\t])\r\n\r\n\t// Format verbose date for the tooltip.\r\n\tconst verboseDate = useMemo(() => {\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(date)\r\n\t\t}\r\n\t\treturn verboseDateFormatter(date)\r\n\t}, [\r\n\t\tdate,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormatter\r\n\t])\r\n\r\n\treturn {\r\n\t\tdate,\r\n\t\tformattedDate,\r\n\t\tverboseDate\r\n\t};\r\n}\r\n\r\n// A thousand years is practically a metaphor for \"infinity\"\r\n// in the context of this component.\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nconst INFINITY = 1000 * YEAR\r\n\r\n// `Intl.DateTimeFormat` for verbose date.\r\n// Formatted date example: \"Thursday, December 20, 2012, 7:00:00 AM GMT+4\"\r\nconst DEFAULT_VERBOSE_DATE_FORMAT = {\r\n\tweekday: 'long',\r\n\tday: 'numeric',\r\n\tmonth: 'long',\r\n\tyear: 'numeric',\r\n\thour: 'numeric',\r\n\tminute: '2-digit',\r\n\tsecond: '2-digit'\r\n\t// timeZoneName: 'short'\r\n};","import PropTypes from 'prop-types'\r\n\r\nconst {\r\n\toneOfType,\r\n\tarrayOf,\r\n\tstring,\r\n\tnumber,\r\n\tshape,\r\n\tfunc\r\n} = PropTypes\r\n\r\n// The first step isn't required to define `minTime` or `test()`.\r\nconst step = oneOfType([\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformatAs: string.isRequired\r\n\t}),\r\n\tshape({\r\n\t\tminTime: number,\r\n\t\tformat: func.isRequired\r\n\t}),\r\n\tshape({\r\n\t\ttest: func,\r\n\t\tformat: func.isRequired\r\n\t})\r\n])\r\n\r\n// Formatting style.\r\nexport const style = oneOfType([\r\n\t// Not using `oneOf()` here, because that way\r\n\t// this package wouldn't support some hypothetical\r\n\t// new styles added to `javascript-time-ago` in some future.\r\n\tstring,\r\n\tshape({\r\n\t\tsteps: arrayOf(step).isRequired,\r\n\t\tlabels: oneOfType([\r\n\t\t\tstring,\r\n\t\t\tarrayOf(string)\r\n\t\t]).isRequired,\r\n\t\tround: string\r\n\t})\r\n])","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Time from './Time.js'\r\nimport useTimeAgo from './useTimeAgo.js'\r\n\r\nimport { style as styleType } from './PropTypes.js'\r\n\r\nfunction ReactTimeAgo({\r\n\tdate: dateProperty,\r\n\tfuture,\r\n\ttimeStyle,\r\n\tround,\r\n\tminTimeLeft,\r\n\tlocale,\r\n\tlocales = [],\r\n\tformatVerboseDate,\r\n\t// `Intl.DateTimeFormat` for verbose date.\r\n\tverboseDateFormat,\r\n\tupdateInterval,\r\n\ttick,\r\n\tnow: nowProperty,\r\n\ttimeOffset,\r\n\tpolyfill,\r\n\r\n\t// React Component properties:\r\n\t// Use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\ttooltip = true,\r\n\t// Use `<time/>` tag by default.\r\n\tcomponent: Component = Time,\r\n\t// `container` property name is deprecated, \r\n\t// use `wrapperComponent` property name instead.\r\n\tcontainer,\r\n\twrapperComponent,\r\n\twrapperProps,\r\n\t...rest\r\n}) {\r\n\tconst {\r\n\t\tdate,\r\n\t\tverboseDate,\r\n\t\tformattedDate\r\n\t} = useTimeAgo({\r\n\t\tdate: dateProperty,\r\n\t\tfuture,\r\n\t\ttimeStyle,\r\n\t\tround,\r\n\t\tminTimeLeft,\r\n\t\tlocale,\r\n\t\tlocales,\r\n\t\tformatVerboseDate,\r\n\t\tverboseDateFormat,\r\n\t\tupdateInterval,\r\n\t\ttick,\r\n\t\tnow: nowProperty,\r\n\t\ttimeOffset,\r\n\t\tpolyfill\r\n\t});\r\n\r\n\tconst result = (\r\n\t\t<Component\r\n\t\t\tdate={date}\r\n\t\t\tverboseDate={verboseDate}\r\n\t\t\ttooltip={tooltip}\r\n\t\t\t{...rest}>\r\n\t\t\t{formattedDate}\r\n\t\t</Component>\r\n\t)\r\n\r\n\tconst WrapperComponent = wrapperComponent || container\r\n\r\n\tif (WrapperComponent) {\r\n\t\treturn (\r\n\t\t\t<WrapperComponent\r\n\t\t\t\t{...wrapperProps}\r\n\t\t\t\tverboseDate={verboseDate}>\r\n\t\t\t\t{result}\r\n\t\t\t</WrapperComponent>\r\n\t\t)\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nReactTimeAgo.propTypes = {\r\n\t// `date: Date` or `timestamp: number`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate: PropTypes.oneOfType([\r\n\t\tPropTypes.instanceOf(Date),\r\n\t\tPropTypes.number\r\n\t]).isRequired,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale: PropTypes.string,\r\n\r\n\t// Alternatively to `locale`, one could pass `locales`:\r\n\t// A list of preferred locales (ordered).\r\n\t// Will choose the first supported locale from the list.\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t// If set to `true`, then will stop at \"zero point\"\r\n\t// when going from future dates to past dates.\r\n\t// In other words, even if the `date` has passed,\r\n\t// it will still render as if `date` is `now`.\r\n\tfuture: PropTypes.bool,\r\n\r\n\t// Date/time formatting style.\r\n\t// See `javascript-time-ago` docs on \"Styles\" for more info.\r\n\t// E.g. 'round', 'round-minute', 'twitter', 'twitter-first-minute'.\r\n\ttimeStyle: styleType,\r\n\r\n\t// `round` parameter of `javascript-time-ago`.\r\n\t// See `javascript-time-ago` docs on \"Rounding\" for more info.\r\n\t// Examples: \"round\", \"floor\".\r\n\tround: PropTypes.string,\r\n\r\n\t// If specified, the time won't \"tick\" past this threshold (in seconds).\r\n\t// For example, if `minTimeLeft` is `60 * 60`\r\n\t// then the time won't \"tick\" past \"in 1 hour\".\r\n\tminTimeLeft: PropTypes.number,\r\n\r\n\t// A React component to render the relative time label.\r\n\t// Receives properties:\r\n\t// * date: Date — The date.\r\n\t// * verboseDate: string — Formatted verbose date.\r\n\t// * tooltip: boolean — The `tooltip` property of `<ReactTimeAgo/>` component.\r\n\t// * children: string — The relative time label.\r\n\t// * All \"unknown\" properties that have been passed to `<ReactTimeAgo/>` are passed through to this component.\r\n\tcomponent: PropTypes.elementType,\r\n\r\n\t// Whether to use HTML `tooltip` attribute to show a verbose date tooltip.\r\n\t// Is `true` by default.\r\n\t// Can be set to `false` to disable the native HTML `tooltip`.\r\n\ttooltip: PropTypes.bool,\r\n\r\n\t// Verbose date formatter.\r\n\t// By default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`.\r\n\tformatVerboseDate: PropTypes.func,\r\n\r\n\t// `Intl.DateTimeFormat` format for formatting verbose date.\r\n\t// See `Intl.DateTimeFormat` docs for more info.\r\n\tverboseDateFormat: PropTypes.object,\r\n\r\n\t// (deprecated)\r\n\t// How often the component refreshes itself.\r\n\t// When not provided, will use `getNextTimeToUpdate()` feature\r\n\t// of `javascript-time-ago` styles to determine the update interval.\r\n\tupdateInterval: PropTypes.oneOfType([\r\n\t\tPropTypes.number,\r\n\t\tPropTypes.arrayOf(PropTypes.shape({\r\n\t\t\tthreshold: PropTypes.number,\r\n\t\t\tinterval: PropTypes.number.isRequired\r\n\t\t}))\r\n\t]),\r\n\r\n\t// (deprecated).\r\n\t// Set to `false` to disable automatic refresh of the component.\r\n\t// Is `true` by default.\r\n\t// I guess no one actually turns auto-update off, so this parameter is deprecated.\r\n\ttick: PropTypes.bool,\r\n\r\n\t// Allows setting a custom baseline for relative time measurement.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\tnow: PropTypes.number,\r\n\r\n\t// Allows offsetting the `date` by an arbitrary amount of milliseconds.\r\n\t// https://gitlab.com/catamphetamine/react-time-ago/-/issues/4\r\n\ttimeOffset: PropTypes.number,\r\n\r\n\t// Pass `false` to use native `Intl.RelativeTimeFormat` / `Intl.PluralRules`\r\n\t// instead of the polyfilled ones in `javascript-time-ago`.\r\n\tpolyfill: PropTypes.bool,\r\n\r\n\t// (advanced)\r\n\t// A React Component to wrap the resulting `<time/>` React Element.\r\n\t// Receives `verboseDate` and `children` properties.\r\n\t// Also receives `wrapperProps`, if they're passed.\r\n\t// `verboseDate` can be used for displaying verbose date label\r\n\t// in an \"on mouse over\" (or \"on touch\") tooltip.\r\n\t// See the \"Tooltip\" readme section for more info.\r\n\t// Another example could be having `wrapperComponent`\r\n\t// being rerendered every time the component refreshes itself.\r\n\twrapperComponent: PropTypes.elementType,\r\n\r\n\t// Custom `props` passed to `wrapperComponent`.\r\n\twrapperProps: PropTypes.object\r\n}\r\n\r\n// The component schedules a next refresh every time it renders.\r\n// There's no need to rerender this component unless its props change.\r\nReactTimeAgo = React.memo(ReactTimeAgo)\r\n\r\nexport default ReactTimeAgo"],"names":["safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","length","i","first","second","memoizeOne","resultFn","isEqual","cache","memoized","newArgs","_i","arguments","lastThis","this","lastArgs","lastResult","apply","clear","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","module","exports","process","hr","uptime","Date","getTime","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","root","window","global","vendors","suffix","raf","caf","last","id","queue","frameDuration","callback","_now","next","Math","max","setTimeout","cp","slice","cancelled","e","round","push","handle","fn","call","cancel","polyfill","requestAnimationFrame","cancelAnimationFrame","defaultLocale","localesData","lowercaseLocaleLookup","getDefaultLocale","resolveLocale","locale","toLowerCase","localeMatcher","undefined","resolveLocaleLookup","RangeError","concat","resolvedLocale","resolveLocaleForData","parts","split","pop","_resolvedLocale","join","$","af","n","am","ar","s","String","n100","ast","v0","be","t0","n10","br","n1000000","bs","f","i10","i100","f10","f100","ca","i1000000","ceb","cs","cy","da","dsb","dz","es","ff","fr","ga","gd","he","is","t","replace","ksh","lt","lv","v","mk","mt","pa","pl","pt","ro","ru","se","si","sl","as","az","bg","bn","brx","ce","chr","de","ee","el","en","et","eu","fa","fi","fil","fo","fur","fy","gl","gu","ha","hi","hsb","hu","hy","ia","ig","it","ja","jgo","jv","ka","kea","kk","kl","km","kn","ko","ks","ku","ky","lb","lkt","lo","ml","mn","mr","ms","my","nb","ne","nl","nn","no","or","pcm","ps","rm","sah","sc","sd","sk","so","sq","sr","su","sv","sw","ta","te","th","ti","tk","to","tr","ug","uk","ur","uz","vi","wae","wo","xh","yi","yo","yue","zh","zu","getPluralRulesLocale","languageTag","match","LANGUAGE_REG_EXP","TypeError","getLanguageFromLanguageTag","PluralRules","options","_classCallCheck","locales","supportedLocalesOf","type","PluralRuleFunctions","filter","UNITS","NUMERIC_VALUES","STYLE_VALUES","LOCALE_MATCHER_VALUES","RelativeTimeFormat","numeric","style","indexOf","pluralRules","console","warn","Intl","NumberFormat","numberFormat","numberingSystem","resolvedOptions","_parseFormatArgs2","_slicedToArray","parseFormatArgs","unit","getRule","formatNumber","abs","_parseFormatArgs4","rule","valueIndex","formatNumberToParts","map","part","_objectSpread","unitMessages","message","_message","current","pluralizedMessages","isNegativeZero","select","other","format","formatToParts","Array","isArray","addLocale","localeData","setDefaultLocale","UNIT_ERROR","parseUnit","_typeof","NUMBER_ERROR","parseNumber","isFinite","args","Cache","_len","keys","_key","_keys","key","_len2","_key2","lastKey","_i2","_keys2","intlDateTimeFormatSupported","DateTimeFormat","isStyleObject","constructor","OBJECT_CONSTRUCTOR","isObject","steps","gradation","flavour","labels","units","custom","minute","hour","day","week","month","year","getSecondsInUnit","getStepDenominator","step","factor","formatAs","getRoundFunction","floor","getDiffRatioToNextRoundedNumber","getStepMinTime","_ref","minTime","prevStep","timestamp","future","threshold","getMinTimeForUnit","toUnit","fromUnit","_getMinTimeForUnit","test","JSON","stringify","_ref2","fromUnitAmount","toUnitAmount","getStep","secondsPassed","getNextStep","_ref3","filterStepsByUnits","getStepIndex","granularity","_getStep","getTimeToNextUpdateForUnit","unitDenominator","preciseAmount","roundedAmount","getDiffToPreviousRoundedNumber","getDiffToNextRoundedNumber","INFINITY","getTimeToNextUpdate","date","nextStep","_getTimeToNextUpdateForUnit","timeToStepChange","stepChangesAt","currentOrNextStep","getStepChangesAt","getTimeToStepChange","timeToNextUpdate","min","getLocaleData","addLocaleData","threshold_for_now","threshold_for_minute","approximate","getDate","formatters","monthAndDay","dayMonth","yearMonthAndDay","getFullYear","dayMonthYear","twitter","twitterMinute","mini","miniMinute","defaultLocaleHasBeenSpecified","TimeAgo","isLocaleDataAvailable","_step","_iterator","_createForOfIteratorHelperLoose","done","chooseLocale","IntlRelativeTimeFormat","IntlPluralRules","RelativeTimeFormatPolyfill","relativeTimeFormatCache","pluralRulesCache","input","variable","defaultStyle","roundMinute","approximateTime","miniNow","miniMinuteNow","twitterNow","twitterMinuteNow","twitterFirstMinute","getStyleByName","getTimestamp","_this$getLabels","getLabels","labelsType","nowLabel","nowLabels","longLabels","past","getNowLabel","time","elapsed","allowedUnits","Object","getTimeIntervalMeasurementUnits","_getStep2","formattedDate","formatDateForStep","_this","formatValue","amount","valueForFormatting","sign","getFormatter","getFormattingRule","formattingRules","_ref4","quantifierRules","getPluralRules","get","put","_labelsType","addDefaultLocale","error","addLabels","Time","ref","verboseDate","tooltip","children","rest","_objectWithoutProperties","_excluded","isoString","useMemo","toISOString","React","_extends","dateTime","title","propTypes","INTL_DATE_TIME_FORMAT_SUPPORTED","FALLBACK_VERBOSE_DATE_FORMATTER","toString","memoize","localesFingerprint","resolvedLocales","intlDateTimeFormatSupportedLocale","formatFingerprint","formatter","isDate","isMockedDate","TimeAgoCache","instances","add","instance","wasIdle","_add","start","stop","remove","forceUpdate","updateInstance","tick","nextUpdateTime","scheduleNextTick","_this2","scheduledTick","_instance$getNextValu2","getNextValue","setValue","_updateInstance","guess","result","binarySearch","findTargetIndex","splice","useTimeAgo","timeStyle","minTimeLeft","formatVerboseDate","_ref$verboseDateForma","verboseDateFormat","DEFAULT_VERBOSE_DATE_FORMAT","updateInterval","_ref$tick","nowProperty","_ref$timeOffset","timeOffset","preferredLocales","timeAgo","getTimeAgo","formatDate","useCallback","stopUpdates","maxNow","_timeAgo$format2","formatDateRef","useRef","_useMemo2","_formattedDate","_nextUpdateTime","_useState2","useState","setFormattedDate","updater","useEffect","Updater","_formattedDate2","verboseDateFormatter","getVerboseDateFormatter","weekday","ReactTimeAgo","dateProperty","_ref$locales","_ref$tooltip","_ref$component","component","Component","container","wrapperComponent","wrapperProps","_useTimeAgo","WrapperComponent","styleType","interval"],"sourceRoot":""}