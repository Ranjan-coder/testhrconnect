{"version":3,"file":"static/js/2909.a84e489f.chunk.js","mappings":"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","sources":["pages/Auth/Signup/UserSignup/UserSignup.js","webpack://frontend/./src/pages/Auth/Signup/Signup.module.css?de7d"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Col, Row, Form, Modal } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport google from \"../../../../Assets/Google Logo.jpg\";\r\nimport linkedin from \"../../../../Assets/linkedin logo.jpg\";\r\nimport apple from \"../../../../Assets/Apple logo.jpg\";\r\nimport axios from \"axios\";\r\nimport signupStyle from \"../Signup.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleUserLogin } from \"../../../../Redux/ReduxSlice\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Select from \"react-select\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport \"animate.css\";\r\n\r\nconst baseUrl = process.env.REACT_APP_BACKEND_BASE_URL;\r\nconst newUrl = process.env.REACT_APP_BACKEND_BASE_URL_WITHOUT_API;\r\n\r\nconst Signup = () => {\r\n  const dispatchTO = useDispatch();\r\n  const [stillWorking, setStillWorking] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [isOtpValid, setIsOtpValid] = useState(false);\r\n  const [isSendingOtp, setIsSendingOtp] = useState(false);\r\n  const [isVerifyingOtp, setIsVerifyingOtp] = useState(false);\r\n  const [isOtpResend, setIsOtpResend] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [otpInputs, setOtpInputs] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [resendTimer, setResendTimer] = useState(0);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    resume: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    conf_password: \"\",\r\n    phone_number: \"\",\r\n    dob: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city:\"\",\r\n    showPassword1: false,\r\n    showPassword2: false,\r\n    college: \"\",\r\n    course: \"\",\r\n    course_start_date: \"\",\r\n    course_end_date: \"\",\r\n    percentage: \"\",\r\n    job_title: \"\",\r\n    company: \"\",\r\n    company_start_date: \"\",\r\n    company_end_date: \"\",\r\n    experience: \"\",\r\n    userType: \"user\",\r\n    stillWorking: \"false\",\r\n    step: 1,\r\n  });\r\n\r\n  const nav = useNavigate();\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (resendTimer > 0) {\r\n      timer = setTimeout(() => setResendTimer(resendTimer - 1), 1000);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [resendTimer]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // Handle special fields separately\r\n    if (name === \"dob\") {\r\n      setFormData({ ...formData, dob: value });\r\n    } else if (name === \"course_start_date\") {\r\n      setFormData({ ...formData, course_start_date: value });\r\n    } else if (name === \"course_end_date\") {\r\n      setFormData({ ...formData, course_end_date: value });\r\n    } else if (name === \"company_start_date\") {\r\n      setFormData({ ...formData, company_start_date: value });\r\n    } else if (name === \"company_end_date\") {\r\n      setFormData({ ...formData, company_end_date: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n    console.log(\"Form details\", formData);\r\n  };\r\n\r\n  const handleSelectChange = (selectedOption, { name }) => {\r\n    setFormData({ ...formData, [name]: selectedOption.value });\r\n  };\r\n\r\n  const countryOptions = Country.getAllCountries().map((country) => ({\r\n    value: country.isoCode,\r\n    label: country.name,\r\n  }));\r\n\r\n  const stateOptions = formData.country\r\n    ? State.getStatesOfCountry(formData.country).map((state) => ({\r\n        value: state.isoCode,\r\n        label: state.name,\r\n      }))\r\n    : [];\r\n\r\n  const cityOptions = formData.state\r\n    ? City.getCitiesOfState(formData.country, formData.state).map((city) => ({\r\n        value: city.name,\r\n        label: city.name,\r\n      }))\r\n    : [];\r\n\r\n  const handleOtpInputChange = (index, value) => {\r\n    if (/^\\d$/.test(value) || value === \"\") {\r\n      const newOtpInputs = [...otpInputs];\r\n      newOtpInputs[index] = value;\r\n      setOtpInputs(newOtpInputs);\r\n      // Move focus to the next input field\r\n      if (value !== \"\" && index < otpInputs.length - 1) {\r\n        const nextInput = document.getElementById(`otp-input-${index + 1}`);\r\n        if (nextInput) {\r\n          nextInput.focus();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOtpKeyDown = (index, e) => {\r\n    if (e.key === \"Backspace\" && otpInputs[index] === \"\" && index > 0) {\r\n      document.getElementById(`otp-input-${index - 1}`).focus();\r\n    }\r\n  };\r\n\r\n  const handlePhoneChange = (phone) => {\r\n    setFormData({ ...formData, phone_number: phone });\r\n    console.log(\"Phone number updated\", phone);\r\n  };\r\n\r\n  const toggleShowPassword = (fieldName) => {\r\n    setFormData({ ...formData, [fieldName]: !formData[fieldName] });\r\n  };\r\n\r\n  const handleResumeChange = (e) => {\r\n    // Update the 'resume' state with the selected file\r\n    setFormData({ ...formData, resume: e.target.files[0] });\r\n  };\r\n\r\n  const checkPhoneNumberExists = async (phoneNumber) => {\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/checkPhoneNumber`, {\r\n        phoneNumber,\r\n      });\r\n      return response.data.available;\r\n    } catch (error) {\r\n      console.error(\"Error checking phone number existence:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const checkEmailExists = async (email) => {\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/check-email`, { email });\r\n      return response.status === 200 && !response.data.exists;\r\n    } catch (error) {\r\n      console.error(\"Error checking email existence:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const requestOtp = async () => {\r\n    setIsSendingOtp(true);\r\n    try {\r\n      const emailExists = await checkEmailExists(formData.email);\r\n      if (!emailExists) {\r\n        toast.error(\"Email already registered\");\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(`${baseUrl}/request-otp`, {\r\n        email: formData.email,\r\n      });\r\n      if (response.status === 200) {\r\n        setOtpSent(true);\r\n        toast.success(\"OTP sent to your email\");\r\n        setResendTimer(60);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Failed to send OTP. Please try again.\");\r\n    } finally {\r\n      setIsSendingOtp(false);\r\n    }\r\n  };\r\n\r\n  const handleRequestOtp = async () => {\r\n    try {\r\n      const emailExists = await checkEmailExists(formData.email);\r\n      if (!emailExists) {\r\n        toast.error(\"Email already registered\");\r\n        return;\r\n      }\r\n\r\n      requestOtp();\r\n      openModal();\r\n    } catch (error) {\r\n      toast.error(\"Failed to request OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleResendOtp = async () => {\r\n    setIsOtpResend(true);\r\n    try {\r\n      await requestOtp();\r\n    } catch (error) {\r\n      toast.error(\"Failed to Resend OTP. Please try again.\");\r\n    } finally {\r\n      setIsOtpResend(false);\r\n    }\r\n  };\r\n\r\n  const handleOtpModalSubmit = async () => {\r\n    const otp = otpInputs.join(\"\");\r\n    setIsVerifyingOtp(true);\r\n\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/verify-otp`, {\r\n        email: formData.email,\r\n        otp,\r\n      });\r\n      if (response.status === 200) {\r\n        setIsOtpValid(true);\r\n        toast.success(\"OTP verified successfully\");\r\n        setIsModalOpen(false);\r\n      } else {\r\n        toast.error(\"Invalid OTP. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Invalid OTP. Please try again.\");\r\n    } finally {\r\n      setIsVerifyingOtp(false);\r\n    }\r\n  };\r\n\r\n  const renderOtpInputs = () => {\r\n    return otpInputs.map((value, index) => (\r\n      <input\r\n        key={index}\r\n        type=\"text\"\r\n        id={`otp-input-${index}`}\r\n        value={value}\r\n        maxLength={1}\r\n        onChange={(e) => handleOtpInputChange(index, e.target.value)}\r\n        onKeyDown={(e) => handleOtpKeyDown(index, e)}\r\n        style={{\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          margin: \"5px\",\r\n          textAlign: \"center\",\r\n          fontSize: \"20px\",\r\n          fontFamily: \"roboto\",\r\n        }}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const nextStep = async (e) => {\r\n    e.preventDefault();\r\n    setIsSaving(true);\r\n\r\n    try {\r\n      if (formData.step === 1) {\r\n        if (!formData.resume) {\r\n          toast.error(\"Please upload your resume\");\r\n          return;\r\n        } else {\r\n          toast.success(\"Resume Uploaded Sucessfully\");\r\n          setFormData({ ...formData, step: formData.step + 1 });\r\n        }\r\n      }\r\n\r\n      if (formData.step === 2) {\r\n        // Check if all required fields are filled\r\n        if (\r\n          !formData.name ||\r\n          !formData.email ||\r\n          !formData.password ||\r\n          !formData.conf_password\r\n        ) {\r\n          toast.error(\"Please fill in all required fields\");\r\n          return;\r\n        }\r\n\r\n        if(!isOtpValid){\r\n          toast.error(\"Please verify your email\");\r\n          return;\r\n        }\r\n\r\n        // Check if passwords match\r\n        if (formData.password !== formData.conf_password) {\r\n          toast.error(\"Passwords do not match\");\r\n          return;\r\n        }\r\n        const isEmailAvailable = await checkEmailExists(formData.email);\r\n        if (!isEmailAvailable) {\r\n          return;\r\n        } else {\r\n          toast.success(\"Personal Details Successfully filled\");\r\n          setFormData({ ...formData, step: formData.step + 1 });\r\n        }\r\n      }\r\n\r\n      if (formData.step === 3) {\r\n        // Check if all required fields are filled\r\n        if (\r\n          !formData.phone_number ||\r\n          !formData.dob ||\r\n          !formData.country ||\r\n          !formData.state\r\n        ) {\r\n          toast.error(\"Please fill in all required fields\");\r\n          return;\r\n        } else {\r\n          // Check if the phone number is available\r\n          const isPhoneAvailable = await checkPhoneNumberExists(\r\n            formData.phone_number\r\n          );\r\n          if (!isPhoneAvailable) {\r\n            toast.error(\"Phone number is already registered\");\r\n            return;\r\n          }\r\n\r\n          // Calculate age from date of birth\r\n          const dobDate = new Date(formData.dob);\r\n          const today = new Date();\r\n          let age = today.getFullYear() - dobDate.getFullYear();\r\n          const monthDiff = today.getMonth() - dobDate.getMonth();\r\n          if (\r\n            monthDiff < 0 ||\r\n            (monthDiff === 0 && today.getDate() < dobDate.getDate())\r\n          ) {\r\n            age--;\r\n          }\r\n\r\n          // Check if age is at least 18\r\n          if (age < 18) {\r\n            toast.error(\"You must be at least 18 years old to sign up\");\r\n            return;\r\n          }\r\n\r\n          toast.success(\"Basic Details Successfully filled\");\r\n          setFormData({ ...formData, step: formData.step + 1 });\r\n        }\r\n      }\r\n\r\n      if (formData.step === 4) {\r\n        // Check if all required fields are filled\r\n        if (\r\n          !formData.college ||\r\n          !formData.course ||\r\n          !formData.course_start_date ||\r\n          !formData.course_end_date\r\n        ) {\r\n          toast.error(\"Please fill in all required fields\");\r\n          return;\r\n        }\r\n\r\n        // Parse start and end dates\r\n        const startDate = new Date(formData.course_start_date);\r\n        const endDate = new Date(formData.course_end_date);\r\n\r\n        // Check if start date is greater than end date\r\n        if (startDate >= endDate) {\r\n          toast.error(\"Start date must be greater than end date\");\r\n          return;\r\n        }\r\n\r\n        // Check if difference between start and end date is at least one year\r\n        const oneYear = 1000 * 60 * 60 * 24 * 365; // milliseconds in one year\r\n        if (endDate - startDate < oneYear) {\r\n          toast.error(\r\n            \"Difference between start and end date must be at least one year\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        toast.success(\"Education Details Successfully filled\");\r\n        setFormData({ ...formData, step: formData.step + 1 });\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Step Error, Debug Needed\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const experience = formatDurationMonths(calculateDuration());\r\n    const updatedFormData = { ...formData, experience };\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const { name, email, userType } = formData;\r\n\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"name\", updatedFormData.name);\r\n      formDataToSend.append(\"email\", updatedFormData.email);\r\n      formDataToSend.append(\"password\", updatedFormData.password);\r\n      formDataToSend.append(\"phone_number\", updatedFormData.phone_number);\r\n      formDataToSend.append(\"dob\", updatedFormData.dob);\r\n      formDataToSend.append(\"country\", updatedFormData.country);\r\n      formDataToSend.append(\"state\", updatedFormData.state);\r\n      formDataToSend.append(\"city\", updatedFormData.city);\r\n      formDataToSend.append(\"college\", updatedFormData.college);\r\n      formDataToSend.append(\"course\", updatedFormData.course);\r\n      formDataToSend.append(\r\n        \"course_start_date\",\r\n        updatedFormData.course_start_date\r\n      );\r\n      formDataToSend.append(\"course_end_date\", updatedFormData.course_end_date);\r\n      formDataToSend.append(\"percentage\", updatedFormData.percentage);\r\n      formDataToSend.append(\"job_title\", updatedFormData.job_title);\r\n      formDataToSend.append(\"company\", updatedFormData.company);\r\n      formDataToSend.append(\r\n        \"company_start_date\",\r\n        updatedFormData.company_start_date\r\n      );\r\n      formDataToSend.append(\r\n        \"company_end_date\",\r\n        updatedFormData.company_end_date\r\n      );\r\n      formDataToSend.append(\"experience\", updatedFormData.experience);\r\n      formDataToSend.append(\"stillWorking\", stillWorking);\r\n      formDataToSend.append(\"resume\", updatedFormData.resume);\r\n      formDataToSend.append(\"userType\", updatedFormData.userType);\r\n\r\n      const response = await axios.post(`${baseUrl}/signup`, formDataToSend, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Handle success response\r\n      const { token, savedJob, appliedJob } = response.data;\r\n\r\n      dispatchTO(\r\n        handleUserLogin({ token, email, name, userType, savedJob, appliedJob })\r\n      );\r\n      toast.success(`Welcome ${updatedFormData.name}`);\r\n      setTimeout(() => {\r\n        nav(\"/\");\r\n      }, 1500);\r\n    } catch (error) {\r\n      // Handle error response\r\n      if (error.response) {\r\n        console.error(\"Error:\", error.response.data);\r\n        toast.error(\"Internal Server Error\");\r\n      } else {\r\n        console.error(\"Error:\", error.message);\r\n        toast.error(error.message);\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    nav(\"/login\");\r\n  };\r\n\r\n  // Function to calculate the duration between start and end date in months\r\n  const calculateDuration = () => {\r\n    if (formData.company_start_date) {\r\n      const startDate = new Date(formData.company_start_date);\r\n      const endDate = stillWorking\r\n        ? new Date()\r\n        : new Date(formData.company_end_date);\r\n      const diffTime = Math.abs(endDate - startDate);\r\n      const diffMonths = Math.ceil(diffTime / (1000 * 60 * 60 * 24 * 30)); // Assuming 30 days in a month for simplicity\r\n      return diffMonths;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  // Function to format the duration in months\r\n  const formatDurationMonths = (duration) => {\r\n    const lowerYear = Math.floor(duration / 12);\r\n    const upperYear = lowerYear + 1;\r\n    if (duration % 12 === 0) {\r\n      return `${lowerYear} year${lowerYear !== 1 ? \"s\" : \"\"}`;\r\n    } else {\r\n      return `${lowerYear} - ${upperYear} years`;\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignup = (userType) => {\r\n    try {\r\n      const googleSignupUrl = `${newUrl}/auth/google?userType=${userType}`;\r\n      window.location.href = googleSignupUrl;\r\n    } catch (error) {\r\n      console.error(\"Google signup error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLinkedInSignup = (userType) => {\r\n    try {\r\n      const linkedInSignupUrl = `${newUrl}/auth/linkedin?userType=${userType}`;\r\n      window.location.href = linkedInSignupUrl;\r\n    } catch (error) {\r\n      console.error(\"LinkedIn signup error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* first card */}\r\n\r\n      <div className={signupStyle.signup_container}>\r\n        {formData.step === 1 && (\r\n          <div className={signupStyle.step_container}>\r\n            <div className={signupStyle.step_flex_container}>\r\n              <div className={signupStyle.step_1_part_1}>\r\n                <h1\r\n                  className={` ${signupStyle.kumar_one_regular} ${signupStyle.step_1_banner_heading_signup} keep-text-linear`}\r\n                >\r\n                  WELCOME <br />\r\n                  BACK\r\n                </h1>\r\n                <div className={signupStyle.create_account_name_container}>\r\n                  <h3 className=\"keep-text-black\">Create an Account</h3>\r\n                  <div className=\"keep-text-black\">\r\n                    To keep connected with us please signup <br /> with your\r\n                    personal info\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={signupStyle.step_1_part_2}>\r\n                <h3 className={`${signupStyle.upload_resume_heading} keep-text-black`}>\r\n                  Upload Resume\r\n                </h3>\r\n                <Form onSubmit={nextStep}>\r\n                  <Form.Group as={Row} className=\"mb-3 m-lg-3\">\r\n                    <Col sm=\"9\">\r\n                      <Form.Control\r\n                        type=\"file\"\r\n                        name=\"resume\"\r\n                        accept=\"application/pdf\"\r\n                        onChange={handleResumeChange}\r\n                        className={signupStyle.resume_handler}\r\n                      />\r\n                    </Col>\r\n                  </Form.Group>\r\n                  <div className={signupStyle.step_button_container}>\r\n                    <Button\r\n                      className={signupStyle.step_button}\r\n                      type=\"submit\"\r\n                      disabled={isSaving}\r\n                    >\r\n                      {isSaving ? \"Saving...\" : \"Save and Continue\"}\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n                <div className={signupStyle.forgot_style1}>\r\n                  <span  className=\"keep-text-black\"\r\n                    onClick={handleLogin}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      fontSize: \"16px\",\r\n                      fontFamily: \"roboto\",\r\n                    }}\r\n                  >\r\n                    Already have an account?\r\n                    <span className=\"keep-text-blue\" style={{ color: \"rgba(35, 88, 251, 1)\" }}>\r\n                      Login here\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>OR</div>\r\n                <ul className={signupStyle.login_social_list}>\r\n                  <li className={signupStyle.social_list_item}>\r\n                    <img\r\n                      src={google}\r\n                      alt=\"network-error\"\r\n                      className={signupStyle.social_image_google}\r\n                      onClick={() => handleGoogleSignup(formData.userType)}\r\n                    />\r\n                  </li>\r\n\r\n                  <li className={signupStyle.social_list_item}>\r\n                    <img\r\n                      src={linkedin}\r\n                      alt=\"network-error\"\r\n                      className={signupStyle.social_image_linkedin}\r\n                      onClick={() => handleLinkedInSignup(formData.userType)}\r\n                    />\r\n                  </li>\r\n\r\n                  <li className={signupStyle.social_list_item}>\r\n                    <img\r\n                      src={apple}\r\n                      alt=\"network-error\"\r\n                      className={signupStyle.social_image}\r\n                    />\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {formData.step === 2 && (\r\n          <div className={signupStyle.step_container}>\r\n            <div className={signupStyle.step_flex_container}>\r\n              <div className={signupStyle.step_1_part_1}>\r\n                <h1\r\n                  className={` ${signupStyle.kumar_one_regular} ${signupStyle.step_1_banner_heading_signup}`}\r\n                >\r\n                  WELCOME <br />\r\n                  BACK\r\n                </h1>\r\n                <div className={signupStyle.create_account_name_container}>\r\n                  <h3>Create an Account</h3>\r\n                  <div>\r\n                    To keep connected with us please signup <br /> with your\r\n                    personal info\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={signupStyle.step_2_part_2}>\r\n                <h4\r\n                  style={{\r\n                    paddingBottom: \"10px\",\r\n                    textAlign: \"center\",\r\n                    fontFamily: \"Oswald\",\r\n                    marginLeft: \"-2.5rem\",\r\n                  }}\r\n                >\r\n                  Personal Information\r\n                </h4>\r\n                <div>\r\n                  <Form className=\"m-lg-3\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name\"\r\n                      onChange={handleChange}\r\n                      className={signupStyle.personal_input_field}\r\n                      required\r\n                    />\r\n\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter Email Id\"\r\n                      onChange={handleChange}\r\n                      className={signupStyle.personal_input_field}\r\n                      required\r\n                    />\r\n                    {!otpSent && formData.email && (\r\n                      <Button\r\n                        onClick={handleRequestOtp}\r\n                        disabled={!formData.email}\r\n                        className={`btn btn-primary btn-lg ${signupStyle.request_otp_button}`}\r\n                      >\r\n                        {isSendingOtp ? \"Sending OTP...\" : \"Verify Email\"}\r\n                      </Button>\r\n                    )}\r\n\r\n                    <Modal show={isModalOpen} onHide={closeModal} centered>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title style={{ fontFamily: \"roboto\" }}>\r\n                          Please Verify OTP\r\n                        </Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div\r\n                          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                        >\r\n                          {renderOtpInputs()}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            marginTop: \"10px\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            variant=\"link\"\r\n                            onClick={handleResendOtp}\r\n                            disabled={isOtpResend || resendTimer}\r\n                          >\r\n                            {resendTimer > 0\r\n                              ? `Resend OTP in ${resendTimer}s`\r\n                              : isOtpResend\r\n                              ? \"Resending OTP...\"\r\n                              : \"Resend OTP\"}\r\n                          </Button>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={closeModal}>\r\n                          Close\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          onClick={handleOtpModalSubmit}\r\n                          disabled={isVerifyingOtp}\r\n                          style={{\r\n                            color: \"white\",\r\n                            background:\r\n                              \"linear-gradient(90deg, #0050d1 0%, #00296b 100%)\",\r\n                          }}\r\n                        >\r\n                          {isVerifyingOtp ? \"Verifying OTP...\" : \"Verify OTP\"}\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n\r\n                    <div className={signupStyle.password_container}>\r\n                      <div>\r\n                        <Form.Control\r\n                          type={formData.showPassword1 ? \"text\" : \"password\"}\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          onChange={handleChange}\r\n                          className={signupStyle.personal_input_field}\r\n                          required\r\n                        />\r\n                      </div>\r\n\r\n                      <div>\r\n                        <FontAwesomeIcon\r\n                          icon={formData.showPassword1 ? faEyeSlash : faEye} // Use imported icon variables\r\n                          onClick={() => toggleShowPassword(\"showPassword1\")}\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={signupStyle.eye_icon}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={signupStyle.password_container}>\r\n                      <div>\r\n                        <Form.Control\r\n                          type={formData.showPassword2 ? \"text\" : \"password\"}\r\n                          name=\"conf_password\"\r\n                          placeholder=\"Confirm Password\"\r\n                          onChange={handleChange}\r\n                          className={signupStyle.personal_input_field}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <FontAwesomeIcon\r\n                          icon={formData.showPassword2 ? faEyeSlash : faEye} // Use imported icon variables\r\n                          onClick={() => toggleShowPassword(\"showPassword2\")}\r\n                          style={{ cursor: \"pointer\" }}\r\n                          className={signupStyle.eye_icon}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n                <div className={signupStyle.step_button_container}>\r\n                  <Button\r\n                    className={signupStyle.step_button}\r\n                    onClick={nextStep}\r\n                    disabled={isSaving}\r\n                  >\r\n                    {isSaving ? \"Saving...\" : \"Save and Continue\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {formData.step === 3 && (\r\n          <div className={signupStyle.step_container}>\r\n            <div className={signupStyle.step_flex_container}>\r\n              <div className={signupStyle.step_1_part_1}>\r\n                <h1\r\n                  className={` ${signupStyle.kumar_one_regular} ${signupStyle.step_1_banner_heading_signup}`}\r\n                >\r\n                  WELCOME <br />\r\n                  BACK\r\n                </h1>\r\n                <div className={signupStyle.create_account_name_container}>\r\n                  <h3>Create an Account</h3>\r\n                  <div>\r\n                    To keep connected with us please signup <br /> with your\r\n                    personal info\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={signupStyle.step_2_part_2}>\r\n                <h4\r\n                  style={{\r\n                    paddingBottom: \"10px\",\r\n                    textAlign: \"center\",\r\n                    fontFamily: \"Oswald\",\r\n                    marginLeft: \"-2.5rem\",\r\n                  }}\r\n                >\r\n                  Basic Details\r\n                </h4>\r\n                <div>\r\n                  <Form className=\"m-lg-3\">\r\n                    <Select\r\n                      name=\"country\"\r\n                      options={countryOptions}\r\n                      onChange={handleSelectChange}\r\n                      placeholder=\"Select Country\"\r\n                      className={signupStyle.personal_input_field}\r\n                      value={countryOptions.find(option => option.value === formData.country)}\r\n                    />\r\n\r\n                    <Select\r\n                      name=\"state\"\r\n                      options={stateOptions}\r\n                      onChange={handleSelectChange}\r\n                      placeholder=\"Select State\"\r\n                      className={signupStyle.personal_input_field}\r\n                      value={stateOptions.find(option => option.value === formData.state)}\r\n                      isDisabled={!formData.country}\r\n                    />\r\n\r\n                    <Select\r\n                      name=\"city\"\r\n                      options={cityOptions}\r\n                      onChange={handleSelectChange}\r\n                      placeholder=\"Select City\"\r\n                      className={signupStyle.personal_input_field}\r\n                      value={cityOptions.find(option => option.value === formData.city)}\r\n                      isDisabled={!formData.state}\r\n                    />\r\n\r\n                    <PhoneInput\r\n                      country={\"in\"}\r\n                      value={formData.phone_number}\r\n                      onChange={handlePhoneChange}\r\n                      inputProps={{\r\n                        name: \"phone_number\",\r\n                        required: true,\r\n                        placeholder: \"Enter Mobile Number\",\r\n                      }}\r\n                      containerClass={signupStyle.customPhoneInput}\r\n                      inputClass={signupStyle.customPhoneInputInput}\r\n                    />\r\n\r\n                    <DatePicker\r\n                      name=\"dob\"\r\n                      selected={formData.dob}\r\n                      onChange={(date) =>\r\n                        setFormData({ ...formData, dob: date })\r\n                      }\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                      minDate={new Date(\"1970-01-01\")} // Set minimum date to 1970-01-01\r\n                      maxDate={new Date(currentYear, 11, 31)} // Set maximum date to the last day of the current year\r\n                      showYearDropdown\r\n                      scrollableYearDropdown\r\n                      yearDropdownItemNumber={44}\r\n                      className={signupStyle.react_date_form_control}\r\n                      placeholderText=\"DD/MM/YYYY\"\r\n                      required\r\n                    />\r\n                  </Form>\r\n                </div>\r\n                <div className={signupStyle.step_button_container}>\r\n                  <Button\r\n                    className={signupStyle.step_button}\r\n                    onClick={nextStep}\r\n                    disabled={isSaving}\r\n                  >\r\n                    {isSaving ? \"Saving...\" : \"Save and Continue\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {formData.step === 4 && (\r\n          <div className={signupStyle.step_container}>\r\n            <div className={signupStyle.step_flex_container}>\r\n              <div className={signupStyle.step_1_part_1}>\r\n                <h1\r\n                  className={` ${signupStyle.kumar_one_regular} ${signupStyle.step_1_banner_heading_signup}`}\r\n                >\r\n                  WELCOME <br />\r\n                  BACK\r\n                </h1>\r\n                <div className={signupStyle.create_account_name_container}>\r\n                  <h3>Create an Account</h3>\r\n                  <div>\r\n                    To keep connected with us please signup <br /> with your\r\n                    personal info\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={signupStyle.step_4_part_2}>\r\n                <h4\r\n                  style={{\r\n                    paddingBottom: \"10px\",\r\n                    textAlign: \"center\",\r\n                    fontFamily: \"Oswald\",\r\n                    marginLeft: \"-3.5rem\",\r\n                  }}\r\n                >\r\n                  Education Details\r\n                </h4>\r\n                <div>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"College/Universities\"\r\n                    name=\"college\"\r\n                    onChange={handleChange}\r\n                    className={signupStyle.personal_input_field}\r\n                    required\r\n                  />\r\n\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Field Of Specialization\"\r\n                    name=\"course\"\r\n                    onChange={handleChange}\r\n                    className={signupStyle.personal_input_field}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className={signupStyle.education_date_container}>\r\n                  <div className={signupStyle.date_container}>\r\n                    <button className={signupStyle.date_buttons}>\r\n                      Start Date\r\n                    </button>\r\n                    <DatePicker\r\n                      name=\"course_start_date\"\r\n                      dateFormat=\"dd/MM/yy\"\r\n                      selected={formData.course_start_date}\r\n                      onChange={(date) =>\r\n                        setFormData({ ...formData, course_start_date: date })\r\n                      }\r\n                      className={signupStyle.education_detail_start_date}\r\n                      placeholderText=\"DD/MM/YY\"\r\n                      minDate={new Date(\"1970-01-01\")} // Set minimum date to 1970-01-01\r\n                      maxDate={new Date(currentYear, 11, 31)} // Set maximum date to the last day of the current year\r\n                      showYearDropdown\r\n                      scrollableYearDropdown\r\n                      yearDropdownItemNumber={44}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className={signupStyle.date_container}>\r\n                    <button className={signupStyle.date_buttons}>\r\n                      End Date\r\n                    </button>\r\n                    <DatePicker\r\n                      name=\"course_end_date\"\r\n                      dateFormat=\"dd/MM/yy\"\r\n                      selected={formData.course_end_date}\r\n                      onChange={(date) =>\r\n                        setFormData({ ...formData, course_end_date: date })\r\n                      }\r\n                      className={signupStyle.education_detail_start_date}\r\n                      placeholderText=\"DD/MM/YY\"\r\n                      minDate={new Date(\"1970-01-01\")} // Set minimum date to 1970-01-01\r\n                      maxDate={new Date(currentYear, 11, 31)} // Set maximum date to the last day of the current year\r\n                      showYearDropdown\r\n                      scrollableYearDropdown\r\n                      yearDropdownItemNumber={44}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Percentage/CGPA\"\r\n                  name=\"percentage\"\r\n                  onChange={handleChange}\r\n                  className={signupStyle.personal_input_field}\r\n                  required\r\n                />\r\n\r\n                <div className={signupStyle.step_button_container}>\r\n                  <Button\r\n                    className={signupStyle.step_button}\r\n                    onClick={nextStep}\r\n                    disabled={isSaving}\r\n                  >\r\n                    {isSaving ? \"Saving...\" : \"Save and Continue\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {formData.step === 5 && (\r\n          <div className={signupStyle.step_container}>\r\n            <div className={signupStyle.step_flex_container}>\r\n              <div className={signupStyle.step_1_part_1}>\r\n                <h1\r\n                  className={`${signupStyle.kumar_one_regular} ${signupStyle.step_1_banner_heading_signup}`}\r\n                >\r\n                  WELCOME <br />\r\n                  BACK\r\n                </h1>\r\n                <div className={signupStyle.create_account_name_container}>\r\n                  <h3>Create an Account</h3>\r\n                  <div>\r\n                    To keep connected with us please signup <br /> with your\r\n                    personal info\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={signupStyle.step_4_part_2}>\r\n                <h4\r\n                  style={{\r\n                    paddingBottom: \"10px\",\r\n                    textAlign: \"center\",\r\n                    fontFamily: \"Oswald\",\r\n                    marginLeft: \"-3.5rem\",\r\n                  }}\r\n                >\r\n                  Experience (Optional)\r\n                </h4>\r\n                <div>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Job Title\"\r\n                    name=\"job_title\"\r\n                    onChange={handleChange}\r\n                    className={signupStyle.personal_input_field}\r\n                    required\r\n                  />\r\n\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Company\"\r\n                    name=\"company\"\r\n                    onChange={handleChange}\r\n                    className={signupStyle.personal_input_field}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className={signupStyle.education_date_container}>\r\n                  <div className={signupStyle.date_container}>\r\n                    <button className={signupStyle.date_buttons}>\r\n                      Start Date\r\n                    </button>\r\n                    <DatePicker\r\n                      name=\"company_start_date\"\r\n                      dateFormat=\"dd/MM/yy\"\r\n                      selected={formData.company_start_date}\r\n                      onChange={(date) =>\r\n                        setFormData({ ...formData, company_start_date: date })\r\n                      }\r\n                      className={signupStyle.education_detail_start_date}\r\n                      placeholderText=\"DD/MM/YY\"\r\n                      minDate={new Date(\"1970-01-01\")}\r\n                      maxDate={new Date()}\r\n                      showYearDropdown\r\n                      scrollableYearDropdown\r\n                      yearDropdownItemNumber={44}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className={signupStyle.date_container}>\r\n                    <button className={signupStyle.date_buttons}>\r\n                      End Date\r\n                    </button>\r\n                    <DatePicker\r\n                      name=\"company_end_date\"\r\n                      dateFormat=\"dd/MM/yy\"\r\n                      selected={formData.company_end_date}\r\n                      onChange={(date) =>\r\n                        setFormData({ ...formData, company_end_date: date })\r\n                      }\r\n                      className={signupStyle.education_detail_start_date}\r\n                      placeholderText=\"DD/MM/YY\"\r\n                      minDate={new Date(\"1970-01-01\")}\r\n                      maxDate={new Date()}\r\n                      showYearDropdown\r\n                      scrollableYearDropdown\r\n                      yearDropdownItemNumber={44}\r\n                      disabled={stillWorking}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={stillWorking}\r\n                      onChange={(e) => {\r\n                        setStillWorking(e.target.checked);\r\n                        setFormData((prevFormData) => ({\r\n                          ...prevFormData,\r\n                          company_end_date: e.target.checked\r\n                            ? null\r\n                            : prevFormData.company_end_date,\r\n                        }));\r\n                      }}\r\n                    />\r\n                    <label\r\n                      style={{\r\n                        fontSize: \"14px\",\r\n                        paddingBottom: \"10px\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      Still Working\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <input\r\n                      name=\"experience\"\r\n                      type=\"text\"\r\n                      value={formatDurationMonths(calculateDuration())}\r\n                      readOnly\r\n                      placeholder=\"experience\"\r\n                      className={signupStyle.personal_input_field}\r\n                      style={{\r\n                        paddingLeft: \"10px\",\r\n                        paddingTop: \"5px\",\r\n                        paddingBottom: \"5px\",\r\n                        border: \"1px solid grey\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={signupStyle.step_button_container}>\r\n                  <Button\r\n                    className={signupStyle.step_button}\r\n                    onClick={handleSubmit}\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    {isSubmitting ? \"Creating Account...\" : \"Create Account\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"signup_container\":\"Signup_signup_container__BP1DW\",\"kumar_one_regular\":\"Signup_kumar_one_regular__2XBHe\",\"step_container\":\"Signup_step_container__Kz1mQ\",\"step_flex_container\":\"Signup_step_flex_container__p7ySa\",\"step_1_part_1\":\"Signup_step_1_part_1__ounPC\",\"step_1_banner_heading_signup\":\"Signup_step_1_banner_heading_signup__iQmvk\",\"upload_resume_heading\":\"Signup_upload_resume_heading__bjRMX\",\"resume_handler\":\"Signup_resume_handler__m3AMv\",\"create_account_name_container\":\"Signup_create_account_name_container__JEyaM\",\"forgot_style1\":\"Signup_forgot_style1__Sd21n\",\"step_1_part_2\":\"Signup_step_1_part_2__cnbeQ\",\"step_button_container\":\"Signup_step_button_container__oAFlo\",\"step_button\":\"Signup_step_button__S0wmU\",\"step_2_part_2\":\"Signup_step_2_part_2__PruPr\",\"personal_input_field\":\"Signup_personal_input_field__c5P6T\",\"password_container\":\"Signup_password_container__SUhZX\",\"eye_icon\":\"Signup_eye_icon__sd7hW\",\"terms_container\":\"Signup_terms_container__kdJn7\",\"check_box\":\"Signup_check_box__4Nu1Y\",\"form-control\":\"Signup_form-control__JWhkA\",\"customPhoneInput\":\"Signup_customPhoneInput__i45r+\",\"customPhoneInputInput\":\"Signup_customPhoneInputInput__wGwKM\",\"react_date_form_control\":\"Signup_react_date_form_control__-aLUB\",\"step_4_part_2\":\"Signup_step_4_part_2__CAuab\",\"education_detail_start_date\":\"Signup_education_detail_start_date__zBlUP\",\"date_buttons\":\"Signup_date_buttons__XvnYk\",\"education_date_container\":\"Signup_education_date_container__2MOdH\",\"date_container\":\"Signup_date_container__AeSt6\",\"login_social_list\":\"Signup_login_social_list__yU4TY\",\"social_image\":\"Signup_social_image__ljwsr\",\"social_image_google\":\"Signup_social_image_google__iNFa3\",\"social_image_linkedin\":\"Signup_social_image_linkedin__Mpu2s\",\"hr_signup_container\":\"Signup_hr_signup_container__5Ci2Z\",\"hr_signup_form\":\"Signup_hr_signup_form__UQc-K\",\"hr_logo\":\"Signup_hr_logo__FKxC-\",\"hr_form_title\":\"Signup_hr_form_title__6qP+j\",\"hr_form_input\":\"Signup_hr_form_input__890wv\",\"hr_form_submit\":\"Signup_hr_form_submit__cj54e\",\"hr_input_field\":\"Signup_hr_input_field__0rx2V\",\"request_otp_button\":\"Signup_request_otp_button__fi9ek\"};"],"names":["baseUrl","process","newUrl","Signup","dispatchTO","useDispatch","stillWorking","setStillWorking","useState","isSubmitting","setIsSubmitting","otpSent","setOtpSent","isOtpValid","setIsOtpValid","isSendingOtp","setIsSendingOtp","isVerifyingOtp","setIsVerifyingOtp","isOtpResend","setIsOtpResend","isModalOpen","setIsModalOpen","otpInputs","setOtpInputs","resendTimer","setResendTimer","isSaving","setIsSaving","formData","setFormData","resume","name","email","password","conf_password","phone_number","dob","country","state","city","showPassword1","showPassword2","college","course","course_start_date","course_end_date","percentage","job_title","company","company_start_date","company_end_date","experience","userType","step","nav","useNavigate","currentYear","Date","getFullYear","closeModal","useEffect","timer","setTimeout","clearTimeout","handleChange","e","value","target","console","log","handleSelectChange","selectedOption","_ref","countryOptions","Country","getAllCountries","map","isoCode","label","stateOptions","State","cityOptions","City","getCitiesOfState","toggleShowPassword","fieldName","checkEmailExists","async","response","axios","post","concat","status","data","exists","error","requestOtp","toast","success","nextStep","preventDefault","phoneNumber","available","checkPhoneNumberExists","dobDate","today","age","monthDiff","getMonth","getDate","startDate","endDate","calculateDuration","diffTime","Math","abs","ceil","formatDurationMonths","duration","lowerYear","floor","upperYear","_jsx","_Fragment","children","_jsxs","className","signupStyle","signup_container","step_container","step_flex_container","step_1_part_1","kumar_one_regular","step_1_banner_heading_signup","create_account_name_container","step_1_part_2","upload_resume_heading","Form","onSubmit","Group","as","Row","Col","sm","Control","type","accept","onChange","files","resume_handler","step_button_container","Button","step_button","disabled","forgot_style1","onClick","handleLogin","style","cursor","fontSize","fontFamily","color","textAlign","login_social_list","social_list_item","src","google","alt","social_image_google","googleSignupUrl","window","location","href","handleGoogleSignup","linkedin","social_image_linkedin","linkedInSignupUrl","handleLinkedInSignup","apple","social_image","step_2_part_2","paddingBottom","marginLeft","placeholder","personal_input_field","required","request_otp_button","Modal","show","onHide","centered","Header","closeButton","Title","Body","display","justifyContent","index","id","maxLength","handleOtpInputChange","test","newOtpInputs","length","nextInput","document","getElementById","focus","onKeyDown","handleOtpKeyDown","key","width","height","margin","marginTop","variant","Footer","otp","join","background","password_container","FontAwesomeIcon","icon","faEyeSlash","faEye","eye_icon","Select","options","find","option","isDisabled","PhoneInput","phone","inputProps","containerClass","customPhoneInput","inputClass","customPhoneInputInput","DatePicker","selected","date","dateFormat","minDate","maxDate","showYearDropdown","scrollableYearDropdown","yearDropdownItemNumber","react_date_form_control","placeholderText","step_4_part_2","education_date_container","date_container","date_buttons","education_detail_start_date","checked","prevFormData","readOnly","paddingLeft","paddingTop","border","updatedFormData","formDataToSend","FormData","append","headers","token","savedJob","appliedJob","handleUserLogin","message"],"sourceRoot":""}